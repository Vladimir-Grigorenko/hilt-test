[Wed Nov  2 18:48:09 2016] [debug] GET "/users/list"
[Wed Nov  2 18:48:09 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Wed Nov  2 18:48:09 2016] [debug] 200 OK (0.063946s, 15.638/s)
[Wed Nov  2 18:53:42 2016] [debug] GET "/users/list"
[Wed Nov  2 18:53:42 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Wed Nov  2 18:53:42 2016] [debug] 200 OK (0.005218s, 191.644/s)
[Wed Nov  2 19:05:45 2016] [debug] POST "/users/add"
[Wed Nov  2 19:05:45 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "add_user"
[Wed Nov  2 19:05:45 2016] [debug] 200 OK (0.037819s, 26.442/s)
[Wed Nov  2 19:05:45 2016] [debug] GET "/users/list"
[Wed Nov  2 19:05:45 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Wed Nov  2 19:05:45 2016] [error] DBIx::Class::Storage::DBI::_dbh_execute(): DBI Exception: DBD::mysql::st execute failed: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'limit = '20' AND page = '1' AND sort USER_ID 'DESC' ) )' at line 1 [for Statement "SELECT me.user_id, me.mail, me.first_name, me.last_name, me.address, me.date_create, me.date_update FROM users me WHERE ( ( limit = ? AND page = ? AND sort USER_ID ? ) )" with ParamValues: 0=20, 1=1, 2="DESC"] at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 20

[Wed Nov  2 19:05:45 2016] [debug] Template "exception.development.html.ep" not found
[Wed Nov  2 19:05:45 2016] [debug] Template "exception.html.ep" not found
[Wed Nov  2 19:05:45 2016] [debug] Rendering template "mojo/debug.html.ep"
[Wed Nov  2 19:05:45 2016] [debug] Rendering template "mojo/menubar.html.ep"
[Wed Nov  2 19:05:45 2016] [debug] Your secret passphrase needs to be changed
[Wed Nov  2 19:05:45 2016] [debug] 500 Internal Server Error (0.03186s, 31.387/s)
[Wed Nov  2 19:05:45 2016] [debug] PUT "/users/1"
[Wed Nov  2 19:05:45 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "update_user"
[Wed Nov  2 19:05:45 2016] [error] Can't call method "update" on an undefined value at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 107.

[Wed Nov  2 19:05:45 2016] [debug] Template "exception.development.html.ep" not found
[Wed Nov  2 19:05:45 2016] [debug] Template "exception.html.ep" not found
[Wed Nov  2 19:05:45 2016] [debug] Rendering cached template "mojo/debug.html.ep"
[Wed Nov  2 19:05:45 2016] [debug] Rendering cached template "mojo/menubar.html.ep"
[Wed Nov  2 19:05:45 2016] [debug] 500 Internal Server Error (0.007771s, 128.684/s)
[Wed Nov  2 19:05:45 2016] [debug] DELETE "/users/1"
[Wed Nov  2 19:05:45 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "delete_user"
[Wed Nov  2 19:05:45 2016] [debug] 200 OK (0.002013s, 496.771/s)
[Wed Nov  2 19:11:22 2016] [debug] POST "/users/add"
[Wed Nov  2 19:11:22 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "add_user"
[Wed Nov  2 19:11:22 2016] [error] DBIx::Class::Storage::DBI::_dbh_execute(): DBI Exception: DBD::mysql::st execute failed: Duplicate entry 'test_test@test.com' for key 'mail_UNIQUE' [for Statement "INSERT INTO users ( address, first_name, last_name, mail) VALUES ( ?, ?, ?, ? )" with ParamValues: 0="test address", 1="Test first name", 2="Test last name", 3="test_test@test.com"] at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 48

[Wed Nov  2 19:11:22 2016] [debug] Template "exception.development.html.ep" not found
[Wed Nov  2 19:11:22 2016] [debug] Template "exception.html.ep" not found
[Wed Nov  2 19:11:22 2016] [debug] Rendering template "mojo/debug.html.ep"
[Wed Nov  2 19:11:22 2016] [debug] Rendering template "mojo/menubar.html.ep"
[Wed Nov  2 19:11:22 2016] [debug] Your secret passphrase needs to be changed
[Wed Nov  2 19:11:22 2016] [debug] 500 Internal Server Error (0.05988s, 16.700/s)
[Wed Nov  2 19:11:22 2016] [debug] GET "/users/list"
[Wed Nov  2 19:11:22 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Wed Nov  2 19:11:22 2016] [error] DBIx::Class::Storage::DBI::_dbh_execute(): DBI Exception: DBD::mysql::st execute failed: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'limit = '20' AND page = '1' AND sort USER_ID 'DESC' ) )' at line 1 [for Statement "SELECT me.user_id, me.mail, me.first_name, me.last_name, me.address, me.date_create, me.date_update FROM users me WHERE ( ( limit = ? AND page = ? AND sort USER_ID ? ) )" with ParamValues: 0=20, 1=1, 2="DESC"] at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 20

[Wed Nov  2 19:11:22 2016] [debug] Template "exception.development.html.ep" not found
[Wed Nov  2 19:11:22 2016] [debug] Template "exception.html.ep" not found
[Wed Nov  2 19:11:22 2016] [debug] Rendering cached template "mojo/debug.html.ep"
[Wed Nov  2 19:11:22 2016] [debug] Rendering cached template "mojo/menubar.html.ep"
[Wed Nov  2 19:11:22 2016] [debug] 500 Internal Server Error (0.012973s, 77.083/s)
[Wed Nov  2 19:11:22 2016] [debug] PUT "/users/1"
[Wed Nov  2 19:11:22 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "update_user"
[Wed Nov  2 19:11:22 2016] [error] Can't call method "update" on an undefined value at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 107.

[Wed Nov  2 19:11:22 2016] [debug] Template "exception.development.html.ep" not found
[Wed Nov  2 19:11:22 2016] [debug] Template "exception.html.ep" not found
[Wed Nov  2 19:11:22 2016] [debug] Rendering cached template "mojo/debug.html.ep"
[Wed Nov  2 19:11:22 2016] [debug] Rendering cached template "mojo/menubar.html.ep"
[Wed Nov  2 19:11:22 2016] [debug] 500 Internal Server Error (0.008122s, 123.122/s)
[Wed Nov  2 19:11:22 2016] [debug] DELETE "/users/1"
[Wed Nov  2 19:11:22 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "delete_user"
[Wed Nov  2 19:11:22 2016] [debug] 200 OK (0.002231s, 448.229/s)
[Wed Nov  2 19:18:37 2016] [debug] POST "/users/add"
[Wed Nov  2 19:18:37 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "add_user"
[Wed Nov  2 19:18:37 2016] [error] DBIx::Class::Storage::DBI::_dbh_execute(): DBI Exception: DBD::mysql::st execute failed: Duplicate entry 'test_test@test.com' for key 'mail_UNIQUE' [for Statement "INSERT INTO users ( address, first_name, last_name, mail) VALUES ( ?, ?, ?, ? )" with ParamValues: 0="test address", 1="Test first name", 2="Test last name", 3="test_test@test.com"] at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 48

[Wed Nov  2 19:18:37 2016] [debug] Template "exception.development.html.ep" not found
[Wed Nov  2 19:18:37 2016] [debug] Template "exception.html.ep" not found
[Wed Nov  2 19:18:37 2016] [debug] Rendering template "mojo/debug.html.ep"
[Wed Nov  2 19:18:37 2016] [debug] Rendering template "mojo/menubar.html.ep"
[Wed Nov  2 19:18:37 2016] [debug] Your secret passphrase needs to be changed
[Wed Nov  2 19:18:37 2016] [debug] 500 Internal Server Error (0.060483s, 16.534/s)
[Wed Nov  2 19:18:37 2016] [debug] GET "/users/list"
[Wed Nov  2 19:18:37 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Wed Nov  2 19:18:37 2016] [debug] 200 OK (0.008484s, 117.869/s)
[Wed Nov  2 19:18:37 2016] [debug] PUT "/users/1"
[Wed Nov  2 19:18:37 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "update_user"
[Wed Nov  2 19:18:37 2016] [error] Can't call method "update" on an undefined value at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 107.

[Wed Nov  2 19:18:37 2016] [debug] Template "exception.development.html.ep" not found
[Wed Nov  2 19:18:37 2016] [debug] Template "exception.html.ep" not found
[Wed Nov  2 19:18:37 2016] [debug] Rendering cached template "mojo/debug.html.ep"
[Wed Nov  2 19:18:37 2016] [debug] Rendering cached template "mojo/menubar.html.ep"
[Wed Nov  2 19:18:37 2016] [debug] 500 Internal Server Error (0.007743s, 129.149/s)
[Wed Nov  2 19:18:37 2016] [debug] DELETE "/users/1"
[Wed Nov  2 19:18:37 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "delete_user"
[Wed Nov  2 19:18:37 2016] [debug] 200 OK (0.002878s, 347.464/s)
[Wed Nov  2 19:19:14 2016] [debug] POST "/users/add"
[Wed Nov  2 19:19:14 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "add_user"
[Wed Nov  2 19:19:14 2016] [debug] 200 OK (0.038622s, 25.892/s)
[Wed Nov  2 19:19:14 2016] [debug] GET "/users/list"
[Wed Nov  2 19:19:14 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Wed Nov  2 19:19:14 2016] [debug] 200 OK (0.006197s, 161.368/s)
[Wed Nov  2 19:19:14 2016] [debug] PUT "/users/1"
[Wed Nov  2 19:19:14 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "update_user"
[Wed Nov  2 19:19:14 2016] [debug] 200 OK (0.009783s, 102.218/s)
[Wed Nov  2 19:19:14 2016] [debug] DELETE "/users/1"
[Wed Nov  2 19:19:14 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "delete_user"
[Wed Nov  2 19:19:14 2016] [debug] 200 OK (0.005229s, 191.241/s)
[Wed Nov  2 19:24:42 2016] [debug] POST "/users/add"
[Wed Nov  2 19:24:42 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "add_user"
[Wed Nov  2 19:24:42 2016] [debug] 200 OK (0.042501s, 23.529/s)
[Wed Nov  2 19:24:42 2016] [debug] GET "/users/list"
[Wed Nov  2 19:24:42 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Wed Nov  2 19:24:42 2016] [debug] 200 OK (0.006955s, 143.781/s)
[Wed Nov  2 19:24:42 2016] [debug] PUT "/users/1"
[Wed Nov  2 19:24:42 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "update_user"
[Wed Nov  2 19:24:42 2016] [error] Can't call method "update" on an undefined value at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 107.

[Wed Nov  2 19:24:42 2016] [debug] Template "exception.development.html.ep" not found
[Wed Nov  2 19:24:42 2016] [debug] Template "exception.html.ep" not found
[Wed Nov  2 19:24:42 2016] [debug] Rendering template "mojo/debug.html.ep"
[Wed Nov  2 19:24:42 2016] [debug] Rendering template "mojo/menubar.html.ep"
[Wed Nov  2 19:24:42 2016] [debug] Your secret passphrase needs to be changed
[Wed Nov  2 19:24:42 2016] [debug] 500 Internal Server Error (0.026707s, 37.443/s)
[Wed Nov  2 19:24:42 2016] [debug] DELETE "/users/1"
[Wed Nov  2 19:24:42 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "delete_user"
[Wed Nov  2 19:24:42 2016] [debug] 200 OK (0.001967s, 508.388/s)
[Wed Nov  2 19:26:55 2016] [debug] POST "/users/add"
[Wed Nov  2 19:26:55 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "add_user"
[Wed Nov  2 19:26:55 2016] [debug] 200 OK (0.048652s, 20.554/s)
[Wed Nov  2 19:26:55 2016] [debug] GET "/users/list"
[Wed Nov  2 19:26:55 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Wed Nov  2 19:26:55 2016] [debug] 200 OK (0.010608s, 94.268/s)
[Wed Nov  2 19:26:55 2016] [debug] PUT "/users/1"
[Wed Nov  2 19:26:55 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "update_user"
[Wed Nov  2 19:26:55 2016] [debug] 200 OK (0.007324s, 136.537/s)
[Wed Nov  2 19:26:55 2016] [debug] DELETE "/users/1"
[Wed Nov  2 19:26:55 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "delete_user"
[Wed Nov  2 19:26:55 2016] [debug] 200 OK (0.005588s, 178.955/s)
[Wed Nov  2 19:28:33 2016] [debug] POST "/users/add"
[Wed Nov  2 19:28:33 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "add_user"
[Wed Nov  2 19:28:33 2016] [debug] 200 OK (0.046197s, 21.646/s)
[Wed Nov  2 19:28:33 2016] [debug] GET "/users/list"
[Wed Nov  2 19:28:33 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Wed Nov  2 19:28:33 2016] [debug] 200 OK (0.009592s, 104.254/s)
[Wed Nov  2 19:28:33 2016] [debug] PUT "/users/1"
[Wed Nov  2 19:28:33 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "update_user"
[Wed Nov  2 19:28:33 2016] [debug] 200 OK (0.006104s, 163.827/s)
[Wed Nov  2 19:28:33 2016] [debug] DELETE "/users/1"
[Wed Nov  2 19:28:33 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "delete_user"
[Wed Nov  2 19:28:33 2016] [debug] 200 OK (0.004904s, 203.915/s)
[Wed Nov  2 19:44:07 2016] [debug] POST "/users/add"
[Wed Nov  2 19:44:07 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "add_user"
[Wed Nov  2 19:44:07 2016] [debug] 200 OK (0.040391s, 24.758/s)
[Wed Nov  2 19:44:07 2016] [debug] GET "/users/list"
[Wed Nov  2 19:44:07 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Wed Nov  2 19:44:07 2016] [debug] 200 OK (0.006152s, 162.549/s)
[Wed Nov  2 19:44:07 2016] [debug] PUT "/users/1"
[Wed Nov  2 19:44:07 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "update_user"
[Wed Nov  2 19:44:07 2016] [error] Can't call method "update" on an undefined value at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 107.

[Wed Nov  2 19:44:07 2016] [debug] Template "exception.development.html.ep" not found
[Wed Nov  2 19:44:07 2016] [debug] Template "exception.html.ep" not found
[Wed Nov  2 19:44:07 2016] [debug] Rendering template "mojo/debug.html.ep"
[Wed Nov  2 19:44:07 2016] [debug] Rendering template "mojo/menubar.html.ep"
[Wed Nov  2 19:44:07 2016] [debug] Your secret passphrase needs to be changed
[Wed Nov  2 19:44:07 2016] [debug] 500 Internal Server Error (0.025355s, 39.440/s)
[Wed Nov  2 19:44:07 2016] [debug] DELETE "/users/1"
[Wed Nov  2 19:44:07 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "delete_user"
[Wed Nov  2 19:44:07 2016] [debug] 200 OK (0.002035s, 491.400/s)
[Sat Nov 12 18:25:09 2016] [debug] GET "/user/list"
[Sat Nov 12 18:25:09 2016] [debug] Template "not_found.development.html.ep" not found
[Sat Nov 12 18:25:09 2016] [debug] Template "not_found.html.ep" not found
[Sat Nov 12 18:25:09 2016] [debug] Rendering template "mojo/debug.html.ep"
[Sat Nov 12 18:25:09 2016] [debug] Rendering template "mojo/menubar.html.ep"
[Sat Nov 12 18:25:09 2016] [debug] Your secret passphrase needs to be changed
[Sat Nov 12 18:25:09 2016] [debug] 404 Not Found (0.020431s, 48.945/s)
[Sat Nov 12 18:33:38 2016] [debug] GET "/user/list"
[Sat Nov 12 18:33:38 2016] [debug] Template "not_found.development.html.ep" not found
[Sat Nov 12 18:33:38 2016] [debug] Template "not_found.html.ep" not found
[Sat Nov 12 18:33:38 2016] [debug] Rendering template "mojo/debug.html.ep"
[Sat Nov 12 18:33:38 2016] [debug] Rendering template "mojo/menubar.html.ep"
[Sat Nov 12 18:33:38 2016] [debug] Your secret passphrase needs to be changed
[Sat Nov 12 18:33:38 2016] [debug] 404 Not Found (0.020479s, 48.831/s)
[Sat Nov 12 18:33:41 2016] [debug] GET "/user/list"
[Sat Nov 12 18:33:41 2016] [debug] Template "not_found.development.html.ep" not found
[Sat Nov 12 18:33:41 2016] [debug] Template "not_found.html.ep" not found
[Sat Nov 12 18:33:41 2016] [debug] Rendering template "mojo/debug.html.ep"
[Sat Nov 12 18:33:41 2016] [debug] Rendering template "mojo/menubar.html.ep"
[Sat Nov 12 18:33:41 2016] [debug] Your secret passphrase needs to be changed
[Sat Nov 12 18:33:41 2016] [debug] 404 Not Found (0.01988s, 50.302/s)
[Sat Nov 12 18:34:15 2016] [debug] GET "/user/list"
[Sat Nov 12 18:34:15 2016] [debug] Template "not_found.development.html.ep" not found
[Sat Nov 12 18:34:15 2016] [debug] Template "not_found.html.ep" not found
[Sat Nov 12 18:34:15 2016] [debug] Rendering template "mojo/debug.html.ep"
[Sat Nov 12 18:34:15 2016] [debug] Rendering template "mojo/menubar.html.ep"
[Sat Nov 12 18:34:15 2016] [debug] Your secret passphrase needs to be changed
[Sat Nov 12 18:34:15 2016] [debug] 404 Not Found (0.020039s, 49.903/s)
[Sat Nov 12 18:35:26 2016] [debug] GET "/users/list"
[Sat Nov 12 18:35:26 2016] [error] Global symbol "$data" requires explicit package name (did you forget to declare "my $data"?) at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 42.
Compilation failed in require at (eval 146) line 1.

[Sat Nov 12 18:35:26 2016] [debug] Template "exception.development.html.ep" not found
[Sat Nov 12 18:35:26 2016] [debug] Template "exception.html.ep" not found
[Sat Nov 12 18:35:26 2016] [debug] Rendering template "mojo/debug.html.ep"
[Sat Nov 12 18:35:26 2016] [debug] Rendering template "mojo/menubar.html.ep"
[Sat Nov 12 18:35:26 2016] [debug] Your secret passphrase needs to be changed
[Sat Nov 12 18:35:26 2016] [debug] 500 Internal Server Error (0.024568s, 40.703/s)
[Sat Nov 12 18:37:01 2016] [debug] GET "/users/list"
[Sat Nov 12 18:37:01 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 18:37:01 2016] [debug] 200 OK (0.057721s, 17.325/s)
[Sat Nov 12 20:49:34 2016] [debug] GET "/users/list"
[Sat Nov 12 20:49:34 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 20:49:34 2016] [debug] caught error: hash- or arrayref expected (not a simple scalar, use allow_nonref to allow this) at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 31.

[Sat Nov 12 20:49:34 2016] [debug] 422 Unprocessable Entity (0.046383s, 21.560/s)
[Sat Nov 12 20:53:51 2016] [debug] GET "/users/list"
[Sat Nov 12 20:53:51 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 20:53:51 2016] [debug] caught error: hash- or arrayref expected (not a simple scalar, use allow_nonref to allow this) at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 31.

[Sat Nov 12 20:53:51 2016] [debug] 422 Unprocessable Entity (0.046746s, 21.392/s)
[Sat Nov 12 20:55:08 2016] [debug] GET "/users/list"
[Sat Nov 12 20:55:08 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 20:55:08 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 20:55:08 2016] [debug] 200 OK (0.044863s, 22.290/s)
[Sat Nov 12 20:58:58 2016] [debug] GET "/users/list"
[Sat Nov 12 20:58:58 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 20:58:58 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 20:58:58 2016] [debug] 200 OK (0.05272s, 18.968/s)
[Sat Nov 12 20:59:15 2016] [debug] GET "/users/list"
[Sat Nov 12 20:59:15 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 20:59:15 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 20:59:15 2016] [debug] 200 OK (0.045931s, 21.772/s)
[Sat Nov 12 21:06:40 2016] [debug] GET "/users/list"
[Sat Nov 12 21:06:40 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:06:40 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:06:40 2016] [debug] 200 OK (0.054414s, 18.378/s)
[Sat Nov 12 21:08:43 2016] [debug] GET "/users/list"
[Sat Nov 12 21:08:43 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:08:43 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:08:43 2016] [debug] Dump req_info = $VAR1 = undef;

[Sat Nov 12 21:08:43 2016] [debug] 200 OK (0.044287s, 22.580/s)
[Sat Nov 12 21:09:47 2016] [debug] GET "/users/list"
[Sat Nov 12 21:09:47 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:09:47 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:09:47 2016] [debug] Dump req_info = $VAR1 = undef;

[Sat Nov 12 21:09:47 2016] [debug] 200 OK (0.045325s, 22.063/s)
[Sat Nov 12 21:10:42 2016] [debug] GET "/users/list"
[Sat Nov 12 21:10:42 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:10:42 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:10:42 2016] [debug] Dump req_info = $VAR1 = undef;

[Sat Nov 12 21:10:42 2016] [debug] 200 OK (0.044487s, 22.478/s)
[Sat Nov 12 21:13:17 2016] [debug] GET "/users/list"
[Sat Nov 12 21:13:17 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:13:17 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:13:17 2016] [debug] Dump req_info = $VAR1 = undef;

[Sat Nov 12 21:13:17 2016] [debug] 200 OK (0.044463s, 22.491/s)
[Sat Nov 12 21:16:31 2016] [info] Listening at "http://*:3000"
[Sat Nov 12 21:16:56 2016] [debug] GET "/"
[Sat Nov 12 21:16:56 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "welcome"
[Sat Nov 12 21:16:56 2016] [debug] Rendering template "example/welcome.html.ep"
[Sat Nov 12 21:16:56 2016] [debug] Rendering template "layouts/default.html.ep"
[Sat Nov 12 21:16:56 2016] [debug] 200 OK (0.031409s, 31.838/s)
[Sat Nov 12 21:39:38 2016] [debug] GET "/users/list"
[Sat Nov 12 21:39:38 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:39:38 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:39:38 2016] [debug] Dump req_info = $VAR1 = undef;

[Sat Nov 12 21:39:38 2016] [debug] 200 OK (0.080068s, 12.489/s)
[Sat Nov 12 21:40:20 2016] [debug] GET "/users/list"
[Sat Nov 12 21:40:20 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:40:20 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:40:20 2016] [debug] Dump req_info = $VAR1 = undef;

[Sat Nov 12 21:40:20 2016] [debug] 200 OK (0.004834s, 206.868/s)
[Sat Nov 12 21:41:02 2016] [debug] GET "/users/list"
[Sat Nov 12 21:41:02 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:41:02 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:41:02 2016] [debug] Dump req_info = $VAR1 = undef;

[Sat Nov 12 21:41:02 2016] [debug] 200 OK (0.006041s, 165.536/s)
[Sat Nov 12 21:41:33 2016] [debug] GET "/users/list"
[Sat Nov 12 21:41:33 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:41:33 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:41:33 2016] [debug] Dump req_info = $VAR1 = undef;

[Sat Nov 12 21:41:33 2016] [debug] 200 OK (0.006646s, 150.466/s)
[Sat Nov 12 21:46:15 2016] [debug] GET "/users/list"
[Sat Nov 12 21:46:15 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:46:15 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:46:15 2016] [debug] Dump req_info = $VAR1 = undef;

[Sat Nov 12 21:46:15 2016] [debug] 200 OK (0.007306s, 136.874/s)
[Sat Nov 12 21:46:41 2016] [debug] GET "/users/list"
[Sat Nov 12 21:46:41 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:46:41 2016] [debug] Dump rs = $VAR1 = bless( {
                 '_result_class' => 'HiltTest::Schema::Result::User',
                 'pager' => undef,
                 '_attrs' => {
                               '_last_sqlmaker_alias_map' => undef,
                               'alias' => 'me',
                               'select' => [
                                             'me.user_id',
                                             'me.mail',
                                             'me.first_name',
                                             'me.last_name',
                                             'me.address',
                                             'me.date_create',
                                             'me.date_update'
                                           ],
                               'result_source' => bless( {
                                                           'schema' => bless( {
                                                                                'storage' => bless( {
                                                                                                      '_dbh_autocommit' => 1,
                                                                                                      '_dbh' => bless( {}, 'DBI::db' ),
                                                                                                      '_dbh_details' => {
                                                                                                                          'info' => {
                                                                                                                                      'dbms_version' => '5.7.16-0ubuntu0.16.04.1',
                                                                                                                                      'normalized_dbms_version' => '5.007016'
                                                                                                                                    }
                                                                                                                        },
                                                                                                      '_dbic_connect_attributes' => {
                                                                                                                                      'RaiseError' => 1,
                                                                                                                                      'AutoCommit' => 1,
                                                                                                                                      'PrintError' => 0,
                                                                                                                                      'ShowErrorStatement' => 1
                                                                                                                                    },
                                                                                                      '_dbi_connect_info' => [
                                                                                                                               'dbi:mysql:database=hilt_test',
                                                                                                                               'root',
                                                                                                                               'MySQL@',
                                                                                                                               $VAR1->{'_attrs'}{'result_source'}{'schema'}{'storage'}{'_dbic_connect_attributes'}
                                                                                                                             ],
                                                                                                      'transaction_depth' => 0,
                                                                                                      'schema' => $VAR1->{'_attrs'}{'result_source'}{'schema'},
                                                                                                      '_sql_maker' => bless( {
                                                                                                                               'bindtype' => 'columns',
                                                                                                                               'cmp' => '=',
                                                                                                                               'array_datatypes' => 1,
                                                                                                                               'limit_dialect' => 'LimitXY',
                                                                                                                               'sqltrue' => '1=1',
                                                                                                                               'equality_op' => qr/^( \= | \= )$/ix,
                                                                                                                               'like_op' => qr/^ (is\s+)? r?like $/ix,
                                                                                                                               'name_sep' => '.',
                                                                                                                               'logic' => 'OR',
                                                                                                                               'sqlfalse' => '0=1',
                                                                                                                               'unary_ops' => [
                                                                                                                                                {
                                                                                                                                                  'handler' => '_where_op_ANDOR',
                                                                                                                                                  'regex' => qr/^ and  (?: [_\s]? \d+ )? $/ix
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                  'handler' => '_where_op_ANDOR',
                                                                                                                                                  'regex' => qr/^ or   (?: [_\s]? \d+ )? $/ix
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                  'handler' => '_where_op_NEST',
                                                                                                                                                  'regex' => qr/^ nest (?: [_\s]? \d+ )? $/ix
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                  'handler' => '_where_op_BOOL',
                                                                                                                                                  'regex' => qr/^ (?: not \s )? bool     $/ix
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                  'handler' => '_where_op_IDENT',
                                                                                                                                                  'regex' => qr/^ ident                  $/ix
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                  'handler' => '_where_op_VALUE',
                                                                                                                                                  'regex' => qr/^ value                  $/ix
                                                                                                                                                }
                                                                                                                                              ],
                                                                                                                               'special_ops' => [
                                                                                                                                                  {
                                                                                                                                                    'regex' => qr/^ (?: not \s )? between $/ix,
                                                                                                                                                    'handler' => '_where_field_BETWEEN'
                                                                                                                                                  },
                                                                                                                                                  {
                                                                                                                                                    'handler' => '_where_field_IN',
                                                                                                                                                    'regex' => qr/^ (?: not \s )? in      $/ix
                                                                                                                                                  },
                                                                                                                                                  {
                                                                                                                                                    'handler' => '_where_op_IDENT',
                                                                                                                                                    'regex' => qr/^ ident                 $/ix
                                                                                                                                                  },
                                                                                                                                                  {
                                                                                                                                                    'regex' => qr/^ value                 $/ix,
                                                                                                                                                    'handler' => '_where_op_VALUE'
                                                                                                                                                  },
                                                                                                                                                  {
                                                                                                                                                    'regex' => qr/^ is (?: \s+ not )?     $/ix,
                                                                                                                                                    'handler' => '_where_field_IS'
                                                                                                                                                  }
                                                                                                                                                ],
                                                                                                                               'not_like_op' => qr/^ (is\s+)? not \s+ r?like $/ix,
                                                                                                                               'inequality_op' => qr/^( != | <> )$/ix,
                                                                                                                               'injection_guard' => qr/
    \;
      |
    ^ \s* go \s
  /mix
                                                                                                                             }, 'DBIx::Class::SQLMaker::MySQL' ),
                                                                                                      '_conn_pid' => 8846,
                                                                                                      '_driver_determined' => 1,
                                                                                                      '_sql_maker_opts' => {},
                                                                                                      'savepoints' => [],
                                                                                                      '_connect_info' => [
                                                                                                                           'dbi:mysql:database=hilt_test',
                                                                                                                           'root',
                                                                                                                           'MySQL@'
                                                                                                                         ],
                                                                                                      '_in_do_block' => 0
                                                                                                    }, 'DBIx::Class::Storage::DBI::mysql' ),
                                                                                'class_mappings' => {
                                                                                                      'HiltTest::Schema::Result::User' => 'User'
                                                                                                    },
                                                                                'source_registrations' => {
                                                                                                            'User' => $VAR1->{'_attrs'}{'result_source'}
                                                                                                          }
                                                                              }, 'HiltTest::Schema' ),
                                                           '_unique_constraints' => {
                                                                                      'primary' => [
                                                                                                     'user_id'
                                                                                                   ],
                                                                                      'mail_UNIQUE' => [
                                                                                                         'mail'
                                                                                                       ]
                                                                                    },
                                                           'source_name' => 'User',
                                                           '_primaries' => $VAR1->{'_attrs'}{'result_source'}{'_unique_constraints'}{'primary'},
                                                           'result_class' => 'HiltTest::Schema::Result::User',
                                                           '_columns' => {
                                                                           'user_id' => {
                                                                                          'is_nullable' => 0,
                                                                                          'extra' => {
                                                                                                       'unsigned' => 1
                                                                                                     },
                                                                                          'is_auto_increment' => 1,
                                                                                          'data_type' => 'integer'
                                                                                        },
                                                                           'last_name' => {
                                                                                            'size' => 255,
                                                                                            'data_type' => 'varchar',
                                                                                            'default_value' => '',
                                                                                            'is_nullable' => 0
                                                                                          },
                                                                           'mail' => {
                                                                                       'size' => 255,
                                                                                       'data_type' => 'varchar',
                                                                                       'is_nullable' => 0
                                                                                     },
                                                                           'date_update' => {
                                                                                              '_inflate_info' => {
                                                                                                                   'inflate' => sub { "DUMMY" },
                                                                                                                   'deflate' => sub { "DUMMY" }
                                                                                                                 },
                                                                                              'data_type' => 'datetime',
                                                                                              'is_nullable' => 0,
                                                                                              'default_value' => 'CURRENT_TIMESTAMP',
                                                                                              '_ic_dt_method' => 'datetime',
                                                                                              'datetime_undef_if_invalid' => 1
                                                                                            },
                                                                           'date_create' => {
                                                                                              'datetime_undef_if_invalid' => 1,
                                                                                              '_ic_dt_method' => 'datetime',
                                                                                              'is_nullable' => 0,
                                                                                              'default_value' => 'CURRENT_TIMESTAMP',
                                                                                              'data_type' => 'datetime',
                                                                                              '_inflate_info' => {
                                                                                                                   'inflate' => sub { "DUMMY" },
                                                                                                                   'deflate' => sub { "DUMMY" }
                                                                                                                 }
                                                                                            },
                                                                           'first_name' => {
                                                                                             'default_value' => '',
                                                                                             'is_nullable' => 0,
                                                                                             'data_type' => 'varchar',
                                                                                             'size' => 255
                                                                                           },
                                                                           'address' => {
                                                                                          'size' => 500,
                                                                                          'data_type' => 'varchar',
                                                                                          'is_nullable' => 0,
                                                                                          'default_value' => ''
                                                                                        }
                                                                         },
                                                           'name' => 'users',
                                                           '_ordered_columns' => [
                                                                                   'user_id',
                                                                                   'mail',
                                                                                   'first_name',
                                                                                   'last_name',
                                                                                   'address',
                                                                                   'date_create',
                                                                                   'date_update'
                                                                                 ],
                                                           'resultset_attributes' => {},
                                                           '_columns_info_loaded' => 0,
                                                           'resultset_class' => 'DBIx::Class::ResultSet',
                                                           '_relationships' => {}
                                                         }, 'DBIx::Class::ResultSource::Table' ),
                               'from' => [
                                           {
                                             'me' => 'users',
                                             '-rsrc' => $VAR1->{'_attrs'}{'result_source'},
                                             '-alias' => 'me'
                                           }
                                         ],
                               '_simple_passthrough_construction' => 1,
                               'as' => [
                                         'user_id',
                                         'mail',
                                         'first_name',
                                         'last_name',
                                         'address',
                                         'date_create',
                                         'date_update'
                                       ]
                             },
                 '_result_inflator' => {
                                         'is_core_row' => 1,
                                         'cref' => sub { "DUMMY" },
                                         'is_hri' => 0
                                       },
                 'attrs' => {
                              'alias' => 'me'
                            },
                 'result_source' => $VAR1->{'_attrs'}{'result_source'},
                 'cond' => undef,
                 'cursor' => bless( {
                                      'attrs' => $VAR1->{'_attrs'},
                                      'storage' => $VAR1->{'_attrs'}{'result_source'}{'schema'}{'storage'},
                                      'args' => [
                                                  $VAR1->{'_attrs'}{'from'},
                                                  $VAR1->{'_attrs'}{'select'},
                                                  undef,
                                                  $VAR1->{'_attrs'}
                                                ],
                                      'sth' => undef
                                    }, 'DBIx::Class::Storage::DBI::Cursor' )
               }, 'DBIx::Class::ResultSet' );

[Sat Nov 12 21:46:41 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:46:41 2016] [debug] Dump req_info = $VAR1 = undef;

[Sat Nov 12 21:46:41 2016] [debug] 200 OK (0.084815s, 11.790/s)
[Sat Nov 12 21:50:46 2016] [debug] GET "/users/list"
[Sat Nov 12 21:50:46 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:50:46 2016] [debug] caught error: DBIx::Class::Schema::source(): Can't find source for Users at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 28

[Sat Nov 12 21:50:46 2016] [debug] 422 Unprocessable Entity (0.02694s, 37.120/s)
[Sat Nov 12 21:51:37 2016] [debug] GET "/users/list"
[Sat Nov 12 21:51:37 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:51:37 2016] [debug] Dump rs = $VAR1 = bless( {
                 'cond' => undef,
                 '_result_class' => 'HiltTest::Schema::Result::User',
                 'result_source' => bless( {
                                             '_primaries' => [
                                                               'user_id'
                                                             ],
                                             'schema' => bless( {
                                                                  'class_mappings' => {
                                                                                        'HiltTest::Schema::Result::User' => 'User'
                                                                                      },
                                                                  'storage' => bless( {
                                                                                        '_dbh_autocommit' => 1,
                                                                                        '_sql_maker' => bless( {
                                                                                                                 'equality_op' => qr/^( \= | \= )$/ix,
                                                                                                                 'cmp' => '=',
                                                                                                                 'name_sep' => '.',
                                                                                                                 'sqltrue' => '1=1',
                                                                                                                 'not_like_op' => qr/^ (is\s+)? not \s+ r?like $/ix,
                                                                                                                 'array_datatypes' => 1,
                                                                                                                 'limit_dialect' => 'LimitXY',
                                                                                                                 'unary_ops' => [
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_ANDOR',
                                                                                                                                    'regex' => qr/^ and  (?: [_\s]? \d+ )? $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'regex' => qr/^ or   (?: [_\s]? \d+ )? $/ix,
                                                                                                                                    'handler' => '_where_op_ANDOR'
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_NEST',
                                                                                                                                    'regex' => qr/^ nest (?: [_\s]? \d+ )? $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_BOOL',
                                                                                                                                    'regex' => qr/^ (?: not \s )? bool     $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_IDENT',
                                                                                                                                    'regex' => qr/^ ident                  $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'regex' => qr/^ value                  $/ix,
                                                                                                                                    'handler' => '_where_op_VALUE'
                                                                                                                                  }
                                                                                                                                ],
                                                                                                                 'special_ops' => [
                                                                                                                                    {
                                                                                                                                      'handler' => '_where_field_BETWEEN',
                                                                                                                                      'regex' => qr/^ (?: not \s )? between $/ix
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'handler' => '_where_field_IN',
                                                                                                                                      'regex' => qr/^ (?: not \s )? in      $/ix
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ ident                 $/ix,
                                                                                                                                      'handler' => '_where_op_IDENT'
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ value                 $/ix,
                                                                                                                                      'handler' => '_where_op_VALUE'
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ is (?: \s+ not )?     $/ix,
                                                                                                                                      'handler' => '_where_field_IS'
                                                                                                                                    }
                                                                                                                                  ],
                                                                                                                 'logic' => 'OR',
                                                                                                                 'injection_guard' => qr/
    \;
      |
    ^ \s* go \s
  /mix,
                                                                                                                 'like_op' => qr/^ (is\s+)? r?like $/ix,
                                                                                                                 'bindtype' => 'columns',
                                                                                                                 'sqlfalse' => '0=1',
                                                                                                                 'inequality_op' => qr/^( != | <> )$/ix
                                                                                                               }, 'DBIx::Class::SQLMaker::MySQL' ),
                                                                                        'savepoints' => [],
                                                                                        'transaction_depth' => 0,
                                                                                        '_dbh' => bless( {}, 'DBI::db' ),
                                                                                        '_conn_pid' => 8936,
                                                                                        'schema' => $VAR1->{'result_source'}{'schema'},
                                                                                        '_driver_determined' => 1,
                                                                                        '_dbh_details' => {
                                                                                                            'info' => {
                                                                                                                        'dbms_version' => '5.7.16-0ubuntu0.16.04.1',
                                                                                                                        'normalized_dbms_version' => '5.007016'
                                                                                                                      }
                                                                                                          },
                                                                                        '_dbi_connect_info' => [
                                                                                                                 'dbi:mysql:database=hilt_test',
                                                                                                                 'root',
                                                                                                                 'MySQL@',
                                                                                                                 {
                                                                                                                   'ShowErrorStatement' => 1,
                                                                                                                   'AutoCommit' => 1,
                                                                                                                   'RaiseError' => 1,
                                                                                                                   'PrintError' => 0
                                                                                                                 }
                                                                                                               ],
                                                                                        '_connect_info' => [
                                                                                                             'dbi:mysql:database=hilt_test',
                                                                                                             'root',
                                                                                                             'MySQL@'
                                                                                                           ],
                                                                                        '_sql_maker_opts' => {},
                                                                                        '_dbic_connect_attributes' => $VAR1->{'result_source'}{'schema'}{'storage'}{'_dbi_connect_info'}[3],
                                                                                        '_in_do_block' => 0
                                                                                      }, 'DBIx::Class::Storage::DBI::mysql' ),
                                                                  'source_registrations' => {
                                                                                              'User' => $VAR1->{'result_source'}
                                                                                            }
                                                                }, 'HiltTest::Schema' ),
                                             '_columns_info_loaded' => 0,
                                             'source_name' => 'User',
                                             '_unique_constraints' => {
                                                                        'mail_UNIQUE' => [
                                                                                           'mail'
                                                                                         ],
                                                                        'primary' => $VAR1->{'result_source'}{'_primaries'}
                                                                      },
                                             'result_class' => 'HiltTest::Schema::Result::User',
                                             '_relationships' => {},
                                             'resultset_class' => 'DBIx::Class::ResultSet',
                                             'resultset_attributes' => {},
                                             '_ordered_columns' => [
                                                                     'user_id',
                                                                     'mail',
                                                                     'first_name',
                                                                     'last_name',
                                                                     'address',
                                                                     'date_create',
                                                                     'date_update'
                                                                   ],
                                             'name' => 'users',
                                             '_columns' => {
                                                             'date_update' => {
                                                                                'data_type' => 'datetime',
                                                                                'datetime_undef_if_invalid' => 1,
                                                                                'default_value' => 'CURRENT_TIMESTAMP',
                                                                                '_inflate_info' => {
                                                                                                     'inflate' => sub { "DUMMY" },
                                                                                                     'deflate' => sub { "DUMMY" }
                                                                                                   },
                                                                                'is_nullable' => 0,
                                                                                '_ic_dt_method' => 'datetime'
                                                                              },
                                                             'address' => {
                                                                            'data_type' => 'varchar',
                                                                            'default_value' => '',
                                                                            'is_nullable' => 0,
                                                                            'size' => 500
                                                                          },
                                                             'mail' => {
                                                                         'data_type' => 'varchar',
                                                                         'is_nullable' => 0,
                                                                         'size' => 255
                                                                       },
                                                             'user_id' => {
                                                                            'data_type' => 'integer',
                                                                            'extra' => {
                                                                                         'unsigned' => 1
                                                                                       },
                                                                            'is_auto_increment' => 1,
                                                                            'is_nullable' => 0
                                                                          },
                                                             'first_name' => {
                                                                               'default_value' => '',
                                                                               'data_type' => 'varchar',
                                                                               'is_nullable' => 0,
                                                                               'size' => 255
                                                                             },
                                                             'last_name' => {
                                                                              'default_value' => '',
                                                                              'data_type' => 'varchar',
                                                                              'size' => 255,
                                                                              'is_nullable' => 0
                                                                            },
                                                             'date_create' => {
                                                                                '_ic_dt_method' => 'datetime',
                                                                                'is_nullable' => 0,
                                                                                '_inflate_info' => {
                                                                                                     'deflate' => sub { "DUMMY" },
                                                                                                     'inflate' => sub { "DUMMY" }
                                                                                                   },
                                                                                'datetime_undef_if_invalid' => 1,
                                                                                'default_value' => 'CURRENT_TIMESTAMP',
                                                                                'data_type' => 'datetime'
                                                                              }
                                                           }
                                           }, 'DBIx::Class::ResultSource::Table' ),
                 '_attrs' => {
                               'from' => [
                                           {
                                             '-rsrc' => $VAR1->{'result_source'},
                                             '-alias' => 'me',
                                             'me' => 'users'
                                           }
                                         ],
                               'result_source' => $VAR1->{'result_source'},
                               'alias' => 'me',
                               '_simple_passthrough_construction' => 1,
                               'as' => [
                                         'user_id',
                                         'mail',
                                         'first_name',
                                         'last_name',
                                         'address',
                                         'date_create',
                                         'date_update'
                                       ],
                               '_last_sqlmaker_alias_map' => undef,
                               'select' => [
                                             'me.user_id',
                                             'me.mail',
                                             'me.first_name',
                                             'me.last_name',
                                             'me.address',
                                             'me.date_create',
                                             'me.date_update'
                                           ]
                             },
                 'pager' => undef,
                 'attrs' => {
                              'alias' => 'me'
                            },
                 '_result_inflator' => {
                                         'cref' => sub { "DUMMY" },
                                         'is_hri' => 0,
                                         'is_core_row' => 1
                                       },
                 'cursor' => bless( {
                                      'args' => [
                                                  $VAR1->{'_attrs'}{'from'},
                                                  $VAR1->{'_attrs'}{'select'},
                                                  undef,
                                                  $VAR1->{'_attrs'}
                                                ],
                                      'sth' => undef,
                                      'storage' => $VAR1->{'result_source'}{'schema'}{'storage'},
                                      'attrs' => $VAR1->{'_attrs'}
                                    }, 'DBIx::Class::Storage::DBI::Cursor' )
               }, 'DBIx::Class::ResultSet' );

[Sat Nov 12 21:51:37 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:51:37 2016] [debug] Dump req_info = $VAR1 = undef;

[Sat Nov 12 21:51:37 2016] [debug] 200 OK (0.084513s, 11.832/s)
[Sat Nov 12 21:52:37 2016] [debug] GET "/users/list"
[Sat Nov 12 21:52:37 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:52:37 2016] [debug] Dump rs = $VAR1 = bless( {
                 'pager' => undef,
                 'cursor' => bless( {
                                      'attrs' => {
                                                   'alias' => 'me',
                                                   'from' => [
                                                               {
                                                                 '-rsrc' => bless( {
                                                                                     '_primaries' => [
                                                                                                       'user_id'
                                                                                                     ],
                                                                                     'schema' => bless( {
                                                                                                          'class_mappings' => {
                                                                                                                                'HiltTest::Schema::Result::User' => 'User'
                                                                                                                              },
                                                                                                          'storage' => bless( {
                                                                                                                                '_dbh_autocommit' => 1,
                                                                                                                                '_sql_maker' => bless( {
                                                                                                                                                         'sqlfalse' => '0=1',
                                                                                                                                                         'inequality_op' => qr/^( != | <> )$/ix,
                                                                                                                                                         'injection_guard' => qr/
    \;
      |
    ^ \s* go \s
  /mix,
                                                                                                                                                         'like_op' => qr/^ (is\s+)? r?like $/ix,
                                                                                                                                                         'bindtype' => 'columns',
                                                                                                                                                         'logic' => 'OR',
                                                                                                                                                         'special_ops' => [
                                                                                                                                                                            {
                                                                                                                                                                              'handler' => '_where_field_BETWEEN',
                                                                                                                                                                              'regex' => qr/^ (?: not \s )? between $/ix
                                                                                                                                                                            },
                                                                                                                                                                            {
                                                                                                                                                                              'handler' => '_where_field_IN',
                                                                                                                                                                              'regex' => qr/^ (?: not \s )? in      $/ix
                                                                                                                                                                            },
                                                                                                                                                                            {
                                                                                                                                                                              'regex' => qr/^ ident                 $/ix,
                                                                                                                                                                              'handler' => '_where_op_IDENT'
                                                                                                                                                                            },
                                                                                                                                                                            {
                                                                                                                                                                              'regex' => qr/^ value                 $/ix,
                                                                                                                                                                              'handler' => '_where_op_VALUE'
                                                                                                                                                                            },
                                                                                                                                                                            {
                                                                                                                                                                              'regex' => qr/^ is (?: \s+ not )?     $/ix,
                                                                                                                                                                              'handler' => '_where_field_IS'
                                                                                                                                                                            }
                                                                                                                                                                          ],
                                                                                                                                                         'name_sep' => '.',
                                                                                                                                                         'sqltrue' => '1=1',
                                                                                                                                                         'equality_op' => qr/^( \= | \= )$/ix,
                                                                                                                                                         'cmp' => '=',
                                                                                                                                                         'array_datatypes' => 1,
                                                                                                                                                         'not_like_op' => qr/^ (is\s+)? not \s+ r?like $/ix,
                                                                                                                                                         'unary_ops' => [
                                                                                                                                                                          {
                                                                                                                                                                            'handler' => '_where_op_ANDOR',
                                                                                                                                                                            'regex' => qr/^ and  (?: [_\s]? \d+ )? $/ix
                                                                                                                                                                          },
                                                                                                                                                                          {
                                                                                                                                                                            'regex' => qr/^ or   (?: [_\s]? \d+ )? $/ix,
                                                                                                                                                                            'handler' => '_where_op_ANDOR'
                                                                                                                                                                          },
                                                                                                                                                                          {
                                                                                                                                                                            'handler' => '_where_op_NEST',
                                                                                                                                                                            'regex' => qr/^ nest (?: [_\s]? \d+ )? $/ix
                                                                                                                                                                          },
                                                                                                                                                                          {
                                                                                                                                                                            'handler' => '_where_op_BOOL',
                                                                                                                                                                            'regex' => qr/^ (?: not \s )? bool     $/ix
                                                                                                                                                                          },
                                                                                                                                                                          {
                                                                                                                                                                            'handler' => '_where_op_IDENT',
                                                                                                                                                                            'regex' => qr/^ ident                  $/ix
                                                                                                                                                                          },
                                                                                                                                                                          {
                                                                                                                                                                            'regex' => qr/^ value                  $/ix,
                                                                                                                                                                            'handler' => '_where_op_VALUE'
                                                                                                                                                                          }
                                                                                                                                                                        ],
                                                                                                                                                         'limit_dialect' => 'LimitXY'
                                                                                                                                                       }, 'DBIx::Class::SQLMaker::MySQL' ),
                                                                                                                                'savepoints' => [],
                                                                                                                                'transaction_depth' => 0,
                                                                                                                                '_dbh' => bless( {}, 'DBI::db' ),
                                                                                                                                '_conn_pid' => 8936,
                                                                                                                                'schema' => $VAR1->{'cursor'}{'attrs'}{'from'}[0]{'-rsrc'}{'schema'},
                                                                                                                                '_driver_determined' => 1,
                                                                                                                                '_dbh_details' => {
                                                                                                                                                    'info' => {
                                                                                                                                                                'dbms_version' => '5.7.16-0ubuntu0.16.04.1',
                                                                                                                                                                'normalized_dbms_version' => '5.007016'
                                                                                                                                                              }
                                                                                                                                                  },
                                                                                                                                '_dbi_connect_info' => [
                                                                                                                                                         'dbi:mysql:database=hilt_test',
                                                                                                                                                         'root',
                                                                                                                                                         'MySQL@',
                                                                                                                                                         {
                                                                                                                                                           'ShowErrorStatement' => 1,
                                                                                                                                                           'AutoCommit' => 1,
                                                                                                                                                           'RaiseError' => 1,
                                                                                                                                                           'PrintError' => 0
                                                                                                                                                         }
                                                                                                                                                       ],
                                                                                                                                '_connect_info' => [
                                                                                                                                                     'dbi:mysql:database=hilt_test',
                                                                                                                                                     'root',
                                                                                                                                                     'MySQL@'
                                                                                                                                                   ],
                                                                                                                                '_sql_maker_opts' => {},
                                                                                                                                '_dbic_connect_attributes' => $VAR1->{'cursor'}{'attrs'}{'from'}[0]{'-rsrc'}{'schema'}{'storage'}{'_dbi_connect_info'}[3],
                                                                                                                                '_in_do_block' => 0
                                                                                                                              }, 'DBIx::Class::Storage::DBI::mysql' ),
                                                                                                          'source_registrations' => {
                                                                                                                                      'User' => $VAR1->{'cursor'}{'attrs'}{'from'}[0]{'-rsrc'}
                                                                                                                                    }
                                                                                                        }, 'HiltTest::Schema' ),
                                                                                     '_columns_info_loaded' => 0,
                                                                                     'source_name' => 'User',
                                                                                     '_unique_constraints' => {
                                                                                                                'mail_UNIQUE' => [
                                                                                                                                   'mail'
                                                                                                                                 ],
                                                                                                                'primary' => $VAR1->{'cursor'}{'attrs'}{'from'}[0]{'-rsrc'}{'_primaries'}
                                                                                                              },
                                                                                     'result_class' => 'HiltTest::Schema::Result::User',
                                                                                     '_relationships' => {},
                                                                                     'resultset_class' => 'DBIx::Class::ResultSet',
                                                                                     'resultset_attributes' => {},
                                                                                     '_ordered_columns' => [
                                                                                                             'user_id',
                                                                                                             'mail',
                                                                                                             'first_name',
                                                                                                             'last_name',
                                                                                                             'address',
                                                                                                             'date_create',
                                                                                                             'date_update'
                                                                                                           ],
                                                                                     'name' => 'users',
                                                                                     '_columns' => {
                                                                                                     'date_update' => {
                                                                                                                        'data_type' => 'datetime',
                                                                                                                        'datetime_undef_if_invalid' => 1,
                                                                                                                        'default_value' => 'CURRENT_TIMESTAMP',
                                                                                                                        '_inflate_info' => {
                                                                                                                                             'inflate' => sub { "DUMMY" },
                                                                                                                                             'deflate' => sub { "DUMMY" }
                                                                                                                                           },
                                                                                                                        'is_nullable' => 0,
                                                                                                                        '_ic_dt_method' => 'datetime'
                                                                                                                      },
                                                                                                     'address' => {
                                                                                                                    'data_type' => 'varchar',
                                                                                                                    'default_value' => '',
                                                                                                                    'is_nullable' => 0,
                                                                                                                    'size' => 500
                                                                                                                  },
                                                                                                     'mail' => {
                                                                                                                 'data_type' => 'varchar',
                                                                                                                 'is_nullable' => 0,
                                                                                                                 'size' => 255
                                                                                                               },
                                                                                                     'user_id' => {
                                                                                                                    'data_type' => 'integer',
                                                                                                                    'extra' => {
                                                                                                                                 'unsigned' => 1
                                                                                                                               },
                                                                                                                    'is_auto_increment' => 1,
                                                                                                                    'is_nullable' => 0
                                                                                                                  },
                                                                                                     'first_name' => {
                                                                                                                       'default_value' => '',
                                                                                                                       'data_type' => 'varchar',
                                                                                                                       'is_nullable' => 0,
                                                                                                                       'size' => 255
                                                                                                                     },
                                                                                                     'last_name' => {
                                                                                                                      'default_value' => '',
                                                                                                                      'data_type' => 'varchar',
                                                                                                                      'size' => 255,
                                                                                                                      'is_nullable' => 0
                                                                                                                    },
                                                                                                     'date_create' => {
                                                                                                                        '_ic_dt_method' => 'datetime',
                                                                                                                        'is_nullable' => 0,
                                                                                                                        '_inflate_info' => {
                                                                                                                                             'deflate' => sub { "DUMMY" },
                                                                                                                                             'inflate' => sub { "DUMMY" }
                                                                                                                                           },
                                                                                                                        'datetime_undef_if_invalid' => 1,
                                                                                                                        'default_value' => 'CURRENT_TIMESTAMP',
                                                                                                                        'data_type' => 'datetime'
                                                                                                                      }
                                                                                                   }
                                                                                   }, 'DBIx::Class::ResultSource::Table' ),
                                                                 '-alias' => 'me',
                                                                 'me' => 'users'
                                                               }
                                                             ],
                                                   'result_source' => $VAR1->{'cursor'}{'attrs'}{'from'}[0]{'-rsrc'},
                                                   '_simple_passthrough_construction' => 1,
                                                   '_last_sqlmaker_alias_map' => undef,
                                                   'select' => [
                                                                 'me.user_id',
                                                                 'me.mail',
                                                                 'me.first_name',
                                                                 'me.last_name',
                                                                 'me.address',
                                                                 'me.date_create',
                                                                 'me.date_update'
                                                               ],
                                                   'as' => [
                                                             'user_id',
                                                             'mail',
                                                             'first_name',
                                                             'last_name',
                                                             'address',
                                                             'date_create',
                                                             'date_update'
                                                           ]
                                                 },
                                      'sth' => undef,
                                      'args' => [
                                                  $VAR1->{'cursor'}{'attrs'}{'from'},
                                                  $VAR1->{'cursor'}{'attrs'}{'select'},
                                                  undef,
                                                  $VAR1->{'cursor'}{'attrs'}
                                                ],
                                      'storage' => $VAR1->{'cursor'}{'attrs'}{'from'}[0]{'-rsrc'}{'schema'}{'storage'}
                                    }, 'DBIx::Class::Storage::DBI::Cursor' ),
                 '_result_inflator' => {
                                         'cref' => sub { "DUMMY" },
                                         'is_hri' => 0,
                                         'is_core_row' => 1
                                       },
                 'attrs' => {
                              'alias' => 'me'
                            },
                 'result_source' => $VAR1->{'cursor'}{'attrs'}{'from'}[0]{'-rsrc'},
                 '_result_class' => 'HiltTest::Schema::Result::User',
                 'cond' => undef,
                 '_attrs' => $VAR1->{'cursor'}{'attrs'}
               }, 'DBIx::Class::ResultSet' );

[Sat Nov 12 21:52:37 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:52:37 2016] [debug] Dump req_info = $VAR1 = undef;

[Sat Nov 12 21:52:37 2016] [debug] 200 OK (0.008355s, 119.689/s)
[Sat Nov 12 21:54:02 2016] [debug] GET "/users/list"
[Sat Nov 12 21:54:02 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:54:02 2016] [debug] Dump rs = $VAR1 = bless( {
                 'cond' => undef,
                 '_result_class' => 'HiltTest::Schema::Result::User',
                 'result_source' => bless( {
                                             '_primaries' => [
                                                               'user_id'
                                                             ],
                                             'schema' => bless( {
                                                                  'class_mappings' => {
                                                                                        'HiltTest::Schema::Result::User' => 'User'
                                                                                      },
                                                                  'storage' => bless( {
                                                                                        '_dbh_autocommit' => 1,
                                                                                        '_sql_maker' => bless( {
                                                                                                                 'limit_dialect' => 'LimitXY',
                                                                                                                 'unary_ops' => [
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_ANDOR',
                                                                                                                                    'regex' => qr/^ and  (?: [_\s]? \d+ )? $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'regex' => qr/^ or   (?: [_\s]? \d+ )? $/ix,
                                                                                                                                    'handler' => '_where_op_ANDOR'
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_NEST',
                                                                                                                                    'regex' => qr/^ nest (?: [_\s]? \d+ )? $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_BOOL',
                                                                                                                                    'regex' => qr/^ (?: not \s )? bool     $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_IDENT',
                                                                                                                                    'regex' => qr/^ ident                  $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'regex' => qr/^ value                  $/ix,
                                                                                                                                    'handler' => '_where_op_VALUE'
                                                                                                                                  }
                                                                                                                                ],
                                                                                                                 'not_like_op' => qr/^ (is\s+)? not \s+ r?like $/ix,
                                                                                                                 'array_datatypes' => 1,
                                                                                                                 'equality_op' => qr/^( \= | \= )$/ix,
                                                                                                                 'cmp' => '=',
                                                                                                                 'name_sep' => '.',
                                                                                                                 'sqltrue' => '1=1',
                                                                                                                 'special_ops' => [
                                                                                                                                    {
                                                                                                                                      'handler' => '_where_field_BETWEEN',
                                                                                                                                      'regex' => qr/^ (?: not \s )? between $/ix
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'handler' => '_where_field_IN',
                                                                                                                                      'regex' => qr/^ (?: not \s )? in      $/ix
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ ident                 $/ix,
                                                                                                                                      'handler' => '_where_op_IDENT'
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ value                 $/ix,
                                                                                                                                      'handler' => '_where_op_VALUE'
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ is (?: \s+ not )?     $/ix,
                                                                                                                                      'handler' => '_where_field_IS'
                                                                                                                                    }
                                                                                                                                  ],
                                                                                                                 'logic' => 'OR',
                                                                                                                 'bindtype' => 'columns',
                                                                                                                 'injection_guard' => qr/
    \;
      |
    ^ \s* go \s
  /mix,
                                                                                                                 'like_op' => qr/^ (is\s+)? r?like $/ix,
                                                                                                                 'inequality_op' => qr/^( != | <> )$/ix,
                                                                                                                 'sqlfalse' => '0=1'
                                                                                                               }, 'DBIx::Class::SQLMaker::MySQL' ),
                                                                                        'savepoints' => [],
                                                                                        'transaction_depth' => 0,
                                                                                        '_dbh' => bless( {}, 'DBI::db' ),
                                                                                        '_conn_pid' => 8936,
                                                                                        'schema' => $VAR1->{'result_source'}{'schema'},
                                                                                        '_driver_determined' => 1,
                                                                                        '_dbh_details' => {
                                                                                                            'info' => {
                                                                                                                        'dbms_version' => '5.7.16-0ubuntu0.16.04.1',
                                                                                                                        'normalized_dbms_version' => '5.007016'
                                                                                                                      }
                                                                                                          },
                                                                                        '_dbi_connect_info' => [
                                                                                                                 'dbi:mysql:database=hilt_test',
                                                                                                                 'root',
                                                                                                                 'MySQL@',
                                                                                                                 {
                                                                                                                   'ShowErrorStatement' => 1,
                                                                                                                   'AutoCommit' => 1,
                                                                                                                   'RaiseError' => 1,
                                                                                                                   'PrintError' => 0
                                                                                                                 }
                                                                                                               ],
                                                                                        '_connect_info' => [
                                                                                                             'dbi:mysql:database=hilt_test',
                                                                                                             'root',
                                                                                                             'MySQL@'
                                                                                                           ],
                                                                                        '_sql_maker_opts' => {},
                                                                                        '_dbic_connect_attributes' => $VAR1->{'result_source'}{'schema'}{'storage'}{'_dbi_connect_info'}[3],
                                                                                        '_in_do_block' => 0
                                                                                      }, 'DBIx::Class::Storage::DBI::mysql' ),
                                                                  'source_registrations' => {
                                                                                              'User' => $VAR1->{'result_source'}
                                                                                            }
                                                                }, 'HiltTest::Schema' ),
                                             '_columns_info_loaded' => 0,
                                             'source_name' => 'User',
                                             '_unique_constraints' => {
                                                                        'mail_UNIQUE' => [
                                                                                           'mail'
                                                                                         ],
                                                                        'primary' => $VAR1->{'result_source'}{'_primaries'}
                                                                      },
                                             'result_class' => 'HiltTest::Schema::Result::User',
                                             '_relationships' => {},
                                             'resultset_class' => 'DBIx::Class::ResultSet',
                                             'resultset_attributes' => {},
                                             '_ordered_columns' => [
                                                                     'user_id',
                                                                     'mail',
                                                                     'first_name',
                                                                     'last_name',
                                                                     'address',
                                                                     'date_create',
                                                                     'date_update'
                                                                   ],
                                             'name' => 'users',
                                             '_columns' => {
                                                             'date_update' => {
                                                                                'data_type' => 'datetime',
                                                                                'datetime_undef_if_invalid' => 1,
                                                                                'default_value' => 'CURRENT_TIMESTAMP',
                                                                                '_inflate_info' => {
                                                                                                     'inflate' => sub { "DUMMY" },
                                                                                                     'deflate' => sub { "DUMMY" }
                                                                                                   },
                                                                                'is_nullable' => 0,
                                                                                '_ic_dt_method' => 'datetime'
                                                                              },
                                                             'address' => {
                                                                            'data_type' => 'varchar',
                                                                            'default_value' => '',
                                                                            'is_nullable' => 0,
                                                                            'size' => 500
                                                                          },
                                                             'mail' => {
                                                                         'data_type' => 'varchar',
                                                                         'is_nullable' => 0,
                                                                         'size' => 255
                                                                       },
                                                             'user_id' => {
                                                                            'data_type' => 'integer',
                                                                            'extra' => {
                                                                                         'unsigned' => 1
                                                                                       },
                                                                            'is_auto_increment' => 1,
                                                                            'is_nullable' => 0
                                                                          },
                                                             'first_name' => {
                                                                               'default_value' => '',
                                                                               'data_type' => 'varchar',
                                                                               'is_nullable' => 0,
                                                                               'size' => 255
                                                                             },
                                                             'last_name' => {
                                                                              'default_value' => '',
                                                                              'data_type' => 'varchar',
                                                                              'size' => 255,
                                                                              'is_nullable' => 0
                                                                            },
                                                             'date_create' => {
                                                                                '_ic_dt_method' => 'datetime',
                                                                                'is_nullable' => 0,
                                                                                '_inflate_info' => {
                                                                                                     'deflate' => sub { "DUMMY" },
                                                                                                     'inflate' => sub { "DUMMY" }
                                                                                                   },
                                                                                'datetime_undef_if_invalid' => 1,
                                                                                'default_value' => 'CURRENT_TIMESTAMP',
                                                                                'data_type' => 'datetime'
                                                                              }
                                                           }
                                           }, 'DBIx::Class::ResultSource::Table' ),
                 '_attrs' => {
                               'from' => [
                                           {
                                             '-alias' => 'me',
                                             'me' => 'users',
                                             '-rsrc' => $VAR1->{'result_source'}
                                           }
                                         ],
                               'result_source' => $VAR1->{'result_source'},
                               'alias' => 'me',
                               'as' => [
                                         'user_id',
                                         'mail',
                                         'first_name',
                                         'last_name',
                                         'address',
                                         'date_create',
                                         'date_update'
                                       ],
                               'select' => [
                                             'me.user_id',
                                             'me.mail',
                                             'me.first_name',
                                             'me.last_name',
                                             'me.address',
                                             'me.date_create',
                                             'me.date_update'
                                           ],
                               '_last_sqlmaker_alias_map' => undef,
                               '_simple_passthrough_construction' => 1
                             },
                 'pager' => undef,
                 '_result_inflator' => {
                                         'is_core_row' => 1,
                                         'cref' => sub { "DUMMY" },
                                         'is_hri' => 0
                                       },
                 'attrs' => {
                              'alias' => 'me'
                            },
                 'cursor' => bless( {
                                      'args' => [
                                                  $VAR1->{'_attrs'}{'from'},
                                                  $VAR1->{'_attrs'}{'select'},
                                                  undef,
                                                  $VAR1->{'_attrs'}
                                                ],
                                      'sth' => undef,
                                      'storage' => $VAR1->{'result_source'}{'schema'}{'storage'},
                                      'attrs' => $VAR1->{'_attrs'}
                                    }, 'DBIx::Class::Storage::DBI::Cursor' )
               }, 'DBIx::Class::ResultSet' );

[Sat Nov 12 21:54:02 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:54:02 2016] [debug] Dump req_info = $VAR1 = {
          'page' => '1',
          'limit' => '20',
          'sort' => {
                    'user_id' => 'DESC'
                  }
        };

[Sat Nov 12 21:54:02 2016] [debug] 200 OK (0.004403s, 227.118/s)
[Sat Nov 12 21:54:47 2016] [debug] GET "/users/list"
[Sat Nov 12 21:54:47 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:54:47 2016] [debug] Dump rs = $VAR1 = bless( {
                 '_result_class' => 'HiltTest::Schema::Result::User',
                 'result_source' => bless( {
                                             '_primaries' => [
                                                               'user_id'
                                                             ],
                                             'schema' => bless( {
                                                                  'class_mappings' => {
                                                                                        'HiltTest::Schema::Result::User' => 'User'
                                                                                      },
                                                                  'storage' => bless( {
                                                                                        '_dbh_autocommit' => 1,
                                                                                        '_sql_maker' => bless( {
                                                                                                                 'logic' => 'OR',
                                                                                                                 'special_ops' => [
                                                                                                                                    {
                                                                                                                                      'handler' => '_where_field_BETWEEN',
                                                                                                                                      'regex' => qr/^ (?: not \s )? between $/ix
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'handler' => '_where_field_IN',
                                                                                                                                      'regex' => qr/^ (?: not \s )? in      $/ix
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ ident                 $/ix,
                                                                                                                                      'handler' => '_where_op_IDENT'
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ value                 $/ix,
                                                                                                                                      'handler' => '_where_op_VALUE'
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ is (?: \s+ not )?     $/ix,
                                                                                                                                      'handler' => '_where_field_IS'
                                                                                                                                    }
                                                                                                                                  ],
                                                                                                                 'array_datatypes' => 1,
                                                                                                                 'not_like_op' => qr/^ (is\s+)? not \s+ r?like $/ix,
                                                                                                                 'name_sep' => '.',
                                                                                                                 'sqltrue' => '1=1',
                                                                                                                 'equality_op' => qr/^( \= | \= )$/ix,
                                                                                                                 'cmp' => '=',
                                                                                                                 'unary_ops' => [
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_ANDOR',
                                                                                                                                    'regex' => qr/^ and  (?: [_\s]? \d+ )? $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'regex' => qr/^ or   (?: [_\s]? \d+ )? $/ix,
                                                                                                                                    'handler' => '_where_op_ANDOR'
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_NEST',
                                                                                                                                    'regex' => qr/^ nest (?: [_\s]? \d+ )? $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_BOOL',
                                                                                                                                    'regex' => qr/^ (?: not \s )? bool     $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_IDENT',
                                                                                                                                    'regex' => qr/^ ident                  $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'regex' => qr/^ value                  $/ix,
                                                                                                                                    'handler' => '_where_op_VALUE'
                                                                                                                                  }
                                                                                                                                ],
                                                                                                                 'limit_dialect' => 'LimitXY',
                                                                                                                 'inequality_op' => qr/^( != | <> )$/ix,
                                                                                                                 'sqlfalse' => '0=1',
                                                                                                                 'bindtype' => 'columns',
                                                                                                                 'injection_guard' => qr/
    \;
      |
    ^ \s* go \s
  /mix,
                                                                                                                 'like_op' => qr/^ (is\s+)? r?like $/ix
                                                                                                               }, 'DBIx::Class::SQLMaker::MySQL' ),
                                                                                        'savepoints' => [],
                                                                                        'transaction_depth' => 0,
                                                                                        '_dbh' => bless( {}, 'DBI::db' ),
                                                                                        '_conn_pid' => 8936,
                                                                                        'schema' => $VAR1->{'result_source'}{'schema'},
                                                                                        '_driver_determined' => 1,
                                                                                        '_dbh_details' => {
                                                                                                            'info' => {
                                                                                                                        'dbms_version' => '5.7.16-0ubuntu0.16.04.1',
                                                                                                                        'normalized_dbms_version' => '5.007016'
                                                                                                                      }
                                                                                                          },
                                                                                        '_dbi_connect_info' => [
                                                                                                                 'dbi:mysql:database=hilt_test',
                                                                                                                 'root',
                                                                                                                 'MySQL@',
                                                                                                                 {
                                                                                                                   'ShowErrorStatement' => 1,
                                                                                                                   'AutoCommit' => 1,
                                                                                                                   'RaiseError' => 1,
                                                                                                                   'PrintError' => 0
                                                                                                                 }
                                                                                                               ],
                                                                                        '_connect_info' => [
                                                                                                             'dbi:mysql:database=hilt_test',
                                                                                                             'root',
                                                                                                             'MySQL@'
                                                                                                           ],
                                                                                        '_sql_maker_opts' => {},
                                                                                        '_dbic_connect_attributes' => $VAR1->{'result_source'}{'schema'}{'storage'}{'_dbi_connect_info'}[3],
                                                                                        '_in_do_block' => 0
                                                                                      }, 'DBIx::Class::Storage::DBI::mysql' ),
                                                                  'source_registrations' => {
                                                                                              'User' => $VAR1->{'result_source'}
                                                                                            }
                                                                }, 'HiltTest::Schema' ),
                                             '_columns_info_loaded' => 0,
                                             'source_name' => 'User',
                                             '_unique_constraints' => {
                                                                        'mail_UNIQUE' => [
                                                                                           'mail'
                                                                                         ],
                                                                        'primary' => $VAR1->{'result_source'}{'_primaries'}
                                                                      },
                                             'result_class' => 'HiltTest::Schema::Result::User',
                                             '_relationships' => {},
                                             'resultset_class' => 'DBIx::Class::ResultSet',
                                             'resultset_attributes' => {},
                                             '_ordered_columns' => [
                                                                     'user_id',
                                                                     'mail',
                                                                     'first_name',
                                                                     'last_name',
                                                                     'address',
                                                                     'date_create',
                                                                     'date_update'
                                                                   ],
                                             'name' => 'users',
                                             '_columns' => {
                                                             'date_update' => {
                                                                                'data_type' => 'datetime',
                                                                                'datetime_undef_if_invalid' => 1,
                                                                                'default_value' => 'CURRENT_TIMESTAMP',
                                                                                '_inflate_info' => {
                                                                                                     'inflate' => sub { "DUMMY" },
                                                                                                     'deflate' => sub { "DUMMY" }
                                                                                                   },
                                                                                'is_nullable' => 0,
                                                                                '_ic_dt_method' => 'datetime'
                                                                              },
                                                             'address' => {
                                                                            'data_type' => 'varchar',
                                                                            'default_value' => '',
                                                                            'is_nullable' => 0,
                                                                            'size' => 500
                                                                          },
                                                             'mail' => {
                                                                         'data_type' => 'varchar',
                                                                         'is_nullable' => 0,
                                                                         'size' => 255
                                                                       },
                                                             'user_id' => {
                                                                            'data_type' => 'integer',
                                                                            'extra' => {
                                                                                         'unsigned' => 1
                                                                                       },
                                                                            'is_auto_increment' => 1,
                                                                            'is_nullable' => 0
                                                                          },
                                                             'first_name' => {
                                                                               'default_value' => '',
                                                                               'data_type' => 'varchar',
                                                                               'is_nullable' => 0,
                                                                               'size' => 255
                                                                             },
                                                             'last_name' => {
                                                                              'default_value' => '',
                                                                              'data_type' => 'varchar',
                                                                              'size' => 255,
                                                                              'is_nullable' => 0
                                                                            },
                                                             'date_create' => {
                                                                                '_ic_dt_method' => 'datetime',
                                                                                'is_nullable' => 0,
                                                                                '_inflate_info' => {
                                                                                                     'deflate' => sub { "DUMMY" },
                                                                                                     'inflate' => sub { "DUMMY" }
                                                                                                   },
                                                                                'datetime_undef_if_invalid' => 1,
                                                                                'default_value' => 'CURRENT_TIMESTAMP',
                                                                                'data_type' => 'datetime'
                                                                              }
                                                           }
                                           }, 'DBIx::Class::ResultSource::Table' ),
                 'cond' => undef,
                 '_attrs' => {
                               'alias' => 'me',
                               'from' => [
                                           {
                                             '-alias' => 'me',
                                             'me' => 'users',
                                             '-rsrc' => $VAR1->{'result_source'}
                                           }
                                         ],
                               'result_source' => $VAR1->{'result_source'},
                               '_simple_passthrough_construction' => 1,
                               '_last_sqlmaker_alias_map' => undef,
                               'select' => [
                                             'me.user_id',
                                             'me.mail',
                                             'me.first_name',
                                             'me.last_name',
                                             'me.address',
                                             'me.date_create',
                                             'me.date_update'
                                           ],
                               'as' => [
                                         'user_id',
                                         'mail',
                                         'first_name',
                                         'last_name',
                                         'address',
                                         'date_create',
                                         'date_update'
                                       ]
                             },
                 'pager' => undef,
                 'cursor' => bless( {
                                      'sth' => undef,
                                      'args' => [
                                                  $VAR1->{'_attrs'}{'from'},
                                                  $VAR1->{'_attrs'}{'select'},
                                                  undef,
                                                  $VAR1->{'_attrs'}
                                                ],
                                      'storage' => $VAR1->{'result_source'}{'schema'}{'storage'},
                                      'attrs' => $VAR1->{'_attrs'}
                                    }, 'DBIx::Class::Storage::DBI::Cursor' ),
                 '_result_inflator' => {
                                         'is_core_row' => 1,
                                         'cref' => sub { "DUMMY" },
                                         'is_hri' => 0
                                       },
                 'attrs' => {
                              'alias' => 'me'
                            }
               }, 'DBIx::Class::ResultSet' );

[Sat Nov 12 21:54:47 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:54:47 2016] [debug] Dump req_info = $VAR1 = {
          'page' => 1,
          'limit' => 20,
          'sort' => {
                    'user_id' => 'DESC'
                  }
        };

[Sat Nov 12 21:54:47 2016] [debug] 200 OK (0.005154s, 194.024/s)
[Sat Nov 12 21:57:45 2016] [debug] GET "/users/list"
[Sat Nov 12 21:57:45 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:57:45 2016] [debug] Dump rs = $VAR1 = bless( {
                 '_attrs' => {
                               'select' => [
                                             'me.user_id',
                                             'me.mail',
                                             'me.first_name',
                                             'me.last_name',
                                             'me.address',
                                             'me.date_create',
                                             'me.date_update'
                                           ],
                               '_simple_passthrough_construction' => 1,
                               'from' => [
                                           {
                                             '-rsrc' => bless( {
                                                                 'schema' => bless( {
                                                                                      'storage' => bless( {
                                                                                                            '_dbh' => bless( {}, 'DBI::db' ),
                                                                                                            '_sql_maker' => bless( {
                                                                                                                                     'array_datatypes' => 1,
                                                                                                                                     'name_sep' => '.',
                                                                                                                                     'unary_ops' => [
                                                                                                                                                      {
                                                                                                                                                        'regex' => qr/^ and  (?: [_\s]? \d+ )? $/ix,
                                                                                                                                                        'handler' => '_where_op_ANDOR'
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        'handler' => '_where_op_ANDOR',
                                                                                                                                                        'regex' => qr/^ or   (?: [_\s]? \d+ )? $/ix
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        'handler' => '_where_op_NEST',
                                                                                                                                                        'regex' => qr/^ nest (?: [_\s]? \d+ )? $/ix
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        'handler' => '_where_op_BOOL',
                                                                                                                                                        'regex' => qr/^ (?: not \s )? bool     $/ix
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        'handler' => '_where_op_IDENT',
                                                                                                                                                        'regex' => qr/^ ident                  $/ix
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        'handler' => '_where_op_VALUE',
                                                                                                                                                        'regex' => qr/^ value                  $/ix
                                                                                                                                                      }
                                                                                                                                                    ],
                                                                                                                                     'cmp' => '=',
                                                                                                                                     'special_ops' => [
                                                                                                                                                        {
                                                                                                                                                          'regex' => qr/^ (?: not \s )? between $/ix,
                                                                                                                                                          'handler' => '_where_field_BETWEEN'
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          'handler' => '_where_field_IN',
                                                                                                                                                          'regex' => qr/^ (?: not \s )? in      $/ix
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          'handler' => '_where_op_IDENT',
                                                                                                                                                          'regex' => qr/^ ident                 $/ix
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          'handler' => '_where_op_VALUE',
                                                                                                                                                          'regex' => qr/^ value                 $/ix
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          'regex' => qr/^ is (?: \s+ not )?     $/ix,
                                                                                                                                                          'handler' => '_where_field_IS'
                                                                                                                                                        }
                                                                                                                                                      ],
                                                                                                                                     'logic' => 'OR',
                                                                                                                                     'sqlfalse' => '0=1',
                                                                                                                                     'injection_guard' => qr/
    \;
      |
    ^ \s* go \s
  /mix,
                                                                                                                                     'limit_dialect' => 'LimitXY',
                                                                                                                                     'bindtype' => 'columns',
                                                                                                                                     'not_like_op' => qr/^ (is\s+)? not \s+ r?like $/ix,
                                                                                                                                     'sqltrue' => '1=1',
                                                                                                                                     'inequality_op' => qr/^( != | <> )$/ix,
                                                                                                                                     'equality_op' => qr/^( \= | \= )$/ix,
                                                                                                                                     'like_op' => qr/^ (is\s+)? r?like $/ix
                                                                                                                                   }, 'DBIx::Class::SQLMaker::MySQL' ),
                                                                                                            'savepoints' => [],
                                                                                                            '_dbh_autocommit' => 1,
                                                                                                            '_dbi_connect_info' => [
                                                                                                                                     'dbi:mysql:database=hilt_test',
                                                                                                                                     'root',
                                                                                                                                     'MySQL@',
                                                                                                                                     {
                                                                                                                                       'RaiseError' => 1,
                                                                                                                                       'ShowErrorStatement' => 1,
                                                                                                                                       'PrintError' => 0,
                                                                                                                                       'AutoCommit' => 1
                                                                                                                                     }
                                                                                                                                   ],
                                                                                                            '_sql_maker_opts' => {},
                                                                                                            '_in_do_block' => 0,
                                                                                                            '_dbic_connect_attributes' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'}{'schema'}{'storage'}{'_dbi_connect_info'}[3],
                                                                                                            '_connect_info' => [
                                                                                                                                 'dbi:mysql:database=hilt_test',
                                                                                                                                 'root',
                                                                                                                                 'MySQL@'
                                                                                                                               ],
                                                                                                            '_driver_determined' => 1,
                                                                                                            '_conn_pid' => 9059,
                                                                                                            '_dbh_details' => {
                                                                                                                                'info' => {
                                                                                                                                            'dbms_version' => '5.7.16-0ubuntu0.16.04.1',
                                                                                                                                            'normalized_dbms_version' => '5.007016'
                                                                                                                                          }
                                                                                                                              },
                                                                                                            'transaction_depth' => 0,
                                                                                                            'schema' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'}{'schema'}
                                                                                                          }, 'DBIx::Class::Storage::DBI::mysql' ),
                                                                                      'source_registrations' => {
                                                                                                                  'User' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'}
                                                                                                                },
                                                                                      'class_mappings' => {
                                                                                                            'HiltTest::Schema::Result::User' => 'User'
                                                                                                          }
                                                                                    }, 'HiltTest::Schema' ),
                                                                 'name' => 'users',
                                                                 'resultset_attributes' => {},
                                                                 '_relationships' => {},
                                                                 '_ordered_columns' => [
                                                                                         'user_id',
                                                                                         'mail',
                                                                                         'first_name',
                                                                                         'last_name',
                                                                                         'address',
                                                                                         'date_create',
                                                                                         'date_update'
                                                                                       ],
                                                                 '_columns_info_loaded' => 0,
                                                                 'source_name' => 'User',
                                                                 '_unique_constraints' => {
                                                                                            'mail_UNIQUE' => [
                                                                                                               'mail'
                                                                                                             ],
                                                                                            'primary' => [
                                                                                                           'user_id'
                                                                                                         ]
                                                                                          },
                                                                 'result_class' => 'HiltTest::Schema::Result::User',
                                                                 'resultset_class' => 'DBIx::Class::ResultSet',
                                                                 '_columns' => {
                                                                                 'date_create' => {
                                                                                                    'is_nullable' => 0,
                                                                                                    '_ic_dt_method' => 'datetime',
                                                                                                    'datetime_undef_if_invalid' => 1,
                                                                                                    '_inflate_info' => {
                                                                                                                         'deflate' => sub { "DUMMY" },
                                                                                                                         'inflate' => sub { "DUMMY" }
                                                                                                                       },
                                                                                                    'data_type' => 'datetime',
                                                                                                    'default_value' => 'CURRENT_TIMESTAMP'
                                                                                                  },
                                                                                 'date_update' => {
                                                                                                    'default_value' => 'CURRENT_TIMESTAMP',
                                                                                                    'data_type' => 'datetime',
                                                                                                    '_inflate_info' => {
                                                                                                                         'deflate' => sub { "DUMMY" },
                                                                                                                         'inflate' => sub { "DUMMY" }
                                                                                                                       },
                                                                                                    'datetime_undef_if_invalid' => 1,
                                                                                                    'is_nullable' => 0,
                                                                                                    '_ic_dt_method' => 'datetime'
                                                                                                  },
                                                                                 'last_name' => {
                                                                                                  'is_nullable' => 0,
                                                                                                  'size' => 255,
                                                                                                  'default_value' => '',
                                                                                                  'data_type' => 'varchar'
                                                                                                },
                                                                                 'user_id' => {
                                                                                                'is_auto_increment' => 1,
                                                                                                'extra' => {
                                                                                                             'unsigned' => 1
                                                                                                           },
                                                                                                'data_type' => 'integer',
                                                                                                'is_nullable' => 0
                                                                                              },
                                                                                 'address' => {
                                                                                                'size' => 500,
                                                                                                'data_type' => 'varchar',
                                                                                                'default_value' => '',
                                                                                                'is_nullable' => 0
                                                                                              },
                                                                                 'first_name' => {
                                                                                                   'size' => 255,
                                                                                                   'data_type' => 'varchar',
                                                                                                   'default_value' => '',
                                                                                                   'is_nullable' => 0
                                                                                                 },
                                                                                 'mail' => {
                                                                                             'data_type' => 'varchar',
                                                                                             'size' => 255,
                                                                                             'is_nullable' => 0
                                                                                           }
                                                                               },
                                                                 '_primaries' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'}{'_unique_constraints'}{'primary'}
                                                               }, 'DBIx::Class::ResultSource::Table' ),
                                             'me' => 'users',
                                             '-alias' => 'me'
                                           }
                                         ],
                               'as' => [
                                         'user_id',
                                         'mail',
                                         'first_name',
                                         'last_name',
                                         'address',
                                         'date_create',
                                         'date_update'
                                       ],
                               'result_source' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'},
                               '_last_sqlmaker_alias_map' => undef,
                               'alias' => 'me'
                             },
                 'cond' => undef,
                 'cursor' => bless( {
                                      'sth' => undef,
                                      'args' => [
                                                  $VAR1->{'_attrs'}{'from'},
                                                  $VAR1->{'_attrs'}{'select'},
                                                  undef,
                                                  $VAR1->{'_attrs'}
                                                ],
                                      'storage' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'}{'schema'}{'storage'},
                                      'attrs' => $VAR1->{'_attrs'}
                                    }, 'DBIx::Class::Storage::DBI::Cursor' ),
                 'result_source' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'},
                 'attrs' => {
                              'alias' => 'me'
                            },
                 '_result_class' => 'HiltTest::Schema::Result::User',
                 '_result_inflator' => {
                                         'is_core_row' => 1,
                                         'is_hri' => 0,
                                         'cref' => sub { "DUMMY" }
                                       },
                 'pager' => undef
               }, 'DBIx::Class::ResultSet' );

[Sat Nov 12 21:57:45 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:57:45 2016] [debug] Dump req_info = $VAR1 = undef;

[Sat Nov 12 21:57:45 2016] [debug] 200 OK (0.047451s, 21.074/s)
[Sat Nov 12 21:57:57 2016] [debug] GET "/users/list"
[Sat Nov 12 21:57:57 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:57:57 2016] [debug] Dump rs = $VAR1 = bless( {
                 'result_source' => bless( {
                                             '_columns_info_loaded' => 0,
                                             '_relationships' => {},
                                             'resultset_class' => 'DBIx::Class::ResultSet',
                                             '_primaries' => [
                                                               'user_id'
                                                             ],
                                             '_ordered_columns' => [
                                                                     'user_id',
                                                                     'mail',
                                                                     'first_name',
                                                                     'last_name',
                                                                     'address',
                                                                     'date_create',
                                                                     'date_update'
                                                                   ],
                                             'source_name' => 'User',
                                             'schema' => bless( {
                                                                  'storage' => bless( {
                                                                                        '_dbi_connect_info' => [
                                                                                                                 'dbi:mysql:database=hilt_test',
                                                                                                                 'root',
                                                                                                                 'MySQL@',
                                                                                                                 {
                                                                                                                   'ShowErrorStatement' => 1,
                                                                                                                   'AutoCommit' => 1,
                                                                                                                   'PrintError' => 0,
                                                                                                                   'RaiseError' => 1
                                                                                                                 }
                                                                                                               ],
                                                                                        '_conn_pid' => 9060,
                                                                                        '_in_do_block' => 0,
                                                                                        '_dbic_connect_attributes' => $VAR1->{'result_source'}{'schema'}{'storage'}{'_dbi_connect_info'}[3],
                                                                                        '_connect_info' => [
                                                                                                             'dbi:mysql:database=hilt_test',
                                                                                                             'root',
                                                                                                             'MySQL@'
                                                                                                           ],
                                                                                        '_dbh_details' => {
                                                                                                            'info' => {
                                                                                                                        'dbms_version' => '5.7.16-0ubuntu0.16.04.1',
                                                                                                                        'normalized_dbms_version' => '5.007016'
                                                                                                                      }
                                                                                                          },
                                                                                        '_sql_maker' => bless( {
                                                                                                                 'array_datatypes' => 1,
                                                                                                                 'name_sep' => '.',
                                                                                                                 'sqlfalse' => '0=1',
                                                                                                                 'cmp' => '=',
                                                                                                                 'like_op' => qr/^ (is\s+)? r?like $/ix,
                                                                                                                 'equality_op' => qr/^( \= | \= )$/ix,
                                                                                                                 'bindtype' => 'columns',
                                                                                                                 'injection_guard' => qr/
    \;
      |
    ^ \s* go \s
  /mix,
                                                                                                                 'sqltrue' => '1=1',
                                                                                                                 'special_ops' => [
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ (?: not \s )? between $/ix,
                                                                                                                                      'handler' => '_where_field_BETWEEN'
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ (?: not \s )? in      $/ix,
                                                                                                                                      'handler' => '_where_field_IN'
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ ident                 $/ix,
                                                                                                                                      'handler' => '_where_op_IDENT'
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'handler' => '_where_op_VALUE',
                                                                                                                                      'regex' => qr/^ value                 $/ix
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'handler' => '_where_field_IS',
                                                                                                                                      'regex' => qr/^ is (?: \s+ not )?     $/ix
                                                                                                                                    }
                                                                                                                                  ],
                                                                                                                 'unary_ops' => [
                                                                                                                                  {
                                                                                                                                    'regex' => qr/^ and  (?: [_\s]? \d+ )? $/ix,
                                                                                                                                    'handler' => '_where_op_ANDOR'
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'regex' => qr/^ or   (?: [_\s]? \d+ )? $/ix,
                                                                                                                                    'handler' => '_where_op_ANDOR'
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_NEST',
                                                                                                                                    'regex' => qr/^ nest (?: [_\s]? \d+ )? $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'regex' => qr/^ (?: not \s )? bool     $/ix,
                                                                                                                                    'handler' => '_where_op_BOOL'
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_IDENT',
                                                                                                                                    'regex' => qr/^ ident                  $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'regex' => qr/^ value                  $/ix,
                                                                                                                                    'handler' => '_where_op_VALUE'
                                                                                                                                  }
                                                                                                                                ],
                                                                                                                 'not_like_op' => qr/^ (is\s+)? not \s+ r?like $/ix,
                                                                                                                 'logic' => 'OR',
                                                                                                                 'inequality_op' => qr/^( != | <> )$/ix,
                                                                                                                 'limit_dialect' => 'LimitXY'
                                                                                                               }, 'DBIx::Class::SQLMaker::MySQL' ),
                                                                                        'transaction_depth' => 0,
                                                                                        '_driver_determined' => 1,
                                                                                        '_dbh_autocommit' => 1,
                                                                                        '_sql_maker_opts' => {},
                                                                                        'savepoints' => [],
                                                                                        'schema' => $VAR1->{'result_source'}{'schema'},
                                                                                        '_dbh' => bless( {}, 'DBI::db' )
                                                                                      }, 'DBIx::Class::Storage::DBI::mysql' ),
                                                                  'source_registrations' => {
                                                                                              'User' => $VAR1->{'result_source'}
                                                                                            },
                                                                  'class_mappings' => {
                                                                                        'HiltTest::Schema::Result::User' => 'User'
                                                                                      }
                                                                }, 'HiltTest::Schema' ),
                                             'result_class' => 'HiltTest::Schema::Result::User',
                                             '_columns' => {
                                                             'first_name' => {
                                                                               'is_nullable' => 0,
                                                                               'size' => 255,
                                                                               'data_type' => 'varchar',
                                                                               'default_value' => ''
                                                                             },
                                                             'address' => {
                                                                            'size' => 500,
                                                                            'is_nullable' => 0,
                                                                            'data_type' => 'varchar',
                                                                            'default_value' => ''
                                                                          },
                                                             'date_update' => {
                                                                                'datetime_undef_if_invalid' => 1,
                                                                                '_ic_dt_method' => 'datetime',
                                                                                'is_nullable' => 0,
                                                                                'data_type' => 'datetime',
                                                                                'default_value' => 'CURRENT_TIMESTAMP',
                                                                                '_inflate_info' => {
                                                                                                     'deflate' => sub { "DUMMY" },
                                                                                                     'inflate' => sub { "DUMMY" }
                                                                                                   }
                                                                              },
                                                             'last_name' => {
                                                                              'default_value' => '',
                                                                              'data_type' => 'varchar',
                                                                              'is_nullable' => 0,
                                                                              'size' => 255
                                                                            },
                                                             'mail' => {
                                                                         'is_nullable' => 0,
                                                                         'size' => 255,
                                                                         'data_type' => 'varchar'
                                                                       },
                                                             'user_id' => {
                                                                            'is_nullable' => 0,
                                                                            'extra' => {
                                                                                         'unsigned' => 1
                                                                                       },
                                                                            'is_auto_increment' => 1,
                                                                            'data_type' => 'integer'
                                                                          },
                                                             'date_create' => {
                                                                                'datetime_undef_if_invalid' => 1,
                                                                                'is_nullable' => 0,
                                                                                '_ic_dt_method' => 'datetime',
                                                                                'data_type' => 'datetime',
                                                                                'default_value' => 'CURRENT_TIMESTAMP',
                                                                                '_inflate_info' => {
                                                                                                     'deflate' => sub { "DUMMY" },
                                                                                                     'inflate' => sub { "DUMMY" }
                                                                                                   }
                                                                              }
                                                           },
                                             '_unique_constraints' => {
                                                                        'primary' => $VAR1->{'result_source'}{'_primaries'},
                                                                        'mail_UNIQUE' => [
                                                                                           'mail'
                                                                                         ]
                                                                      },
                                             'name' => 'users',
                                             'resultset_attributes' => {}
                                           }, 'DBIx::Class::ResultSource::Table' ),
                 'cursor' => bless( {
                                      'storage' => $VAR1->{'result_source'}{'schema'}{'storage'},
                                      'sth' => undef,
                                      'attrs' => {
                                                   'alias' => 'me',
                                                   '_last_sqlmaker_alias_map' => undef,
                                                   'select' => [
                                                                 'me.user_id',
                                                                 'me.mail',
                                                                 'me.first_name',
                                                                 'me.last_name',
                                                                 'me.address',
                                                                 'me.date_create',
                                                                 'me.date_update'
                                                               ],
                                                   '_simple_passthrough_construction' => 1,
                                                   'result_source' => $VAR1->{'result_source'},
                                                   'as' => [
                                                             'user_id',
                                                             'mail',
                                                             'first_name',
                                                             'last_name',
                                                             'address',
                                                             'date_create',
                                                             'date_update'
                                                           ],
                                                   'from' => [
                                                               {
                                                                 '-alias' => 'me',
                                                                 '-rsrc' => $VAR1->{'result_source'},
                                                                 'me' => 'users'
                                                               }
                                                             ]
                                                 },
                                      'args' => [
                                                  $VAR1->{'cursor'}{'attrs'}{'from'},
                                                  $VAR1->{'cursor'}{'attrs'}{'select'},
                                                  undef,
                                                  $VAR1->{'cursor'}{'attrs'}
                                                ]
                                    }, 'DBIx::Class::Storage::DBI::Cursor' ),
                 '_attrs' => $VAR1->{'cursor'}{'attrs'},
                 'attrs' => {
                              'alias' => 'me'
                            },
                 'pager' => undef,
                 'cond' => undef,
                 '_result_class' => 'HiltTest::Schema::Result::User',
                 '_result_inflator' => {
                                         'is_core_row' => 1,
                                         'cref' => sub { "DUMMY" },
                                         'is_hri' => 0
                                       }
               }, 'DBIx::Class::ResultSet' );

[Sat Nov 12 21:57:57 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:57:57 2016] [debug] Dump req_info = $VAR1 = undef;

[Sat Nov 12 21:57:57 2016] [debug] 200 OK (0.047077s, 21.242/s)
[Sat Nov 12 21:58:17 2016] [debug] GET "/users/list"
[Sat Nov 12 21:58:17 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 21:58:17 2016] [debug] Dump rs = $VAR1 = bless( {
                 '_result_class' => 'HiltTest::Schema::Result::User',
                 '_result_inflator' => {
                                         'is_core_row' => 1,
                                         'cref' => sub { "DUMMY" },
                                         'is_hri' => 0
                                       },
                 'attrs' => {
                              'alias' => 'me'
                            },
                 'cond' => undef,
                 'result_source' => bless( {
                                             '_primaries' => [
                                                               'user_id'
                                                             ],
                                             '_columns_info_loaded' => 0,
                                             '_columns' => {
                                                             'date_update' => {
                                                                                '_inflate_info' => {
                                                                                                     'inflate' => sub { "DUMMY" },
                                                                                                     'deflate' => sub { "DUMMY" }
                                                                                                   },
                                                                                'is_nullable' => 0,
                                                                                'default_value' => 'CURRENT_TIMESTAMP',
                                                                                'datetime_undef_if_invalid' => 1,
                                                                                '_ic_dt_method' => 'datetime',
                                                                                'data_type' => 'datetime'
                                                                              },
                                                             'address' => {
                                                                            'data_type' => 'varchar',
                                                                            'size' => 500,
                                                                            'is_nullable' => 0,
                                                                            'default_value' => ''
                                                                          },
                                                             'user_id' => {
                                                                            'is_nullable' => 0,
                                                                            'extra' => {
                                                                                         'unsigned' => 1
                                                                                       },
                                                                            'is_auto_increment' => 1,
                                                                            'data_type' => 'integer'
                                                                          },
                                                             'last_name' => {
                                                                              'is_nullable' => 0,
                                                                              'default_value' => '',
                                                                              'data_type' => 'varchar',
                                                                              'size' => 255
                                                                            },
                                                             'first_name' => {
                                                                               'size' => 255,
                                                                               'data_type' => 'varchar',
                                                                               'default_value' => '',
                                                                               'is_nullable' => 0
                                                                             },
                                                             'date_create' => {
                                                                                '_ic_dt_method' => 'datetime',
                                                                                'datetime_undef_if_invalid' => 1,
                                                                                'is_nullable' => 0,
                                                                                'default_value' => 'CURRENT_TIMESTAMP',
                                                                                '_inflate_info' => {
                                                                                                     'inflate' => sub { "DUMMY" },
                                                                                                     'deflate' => sub { "DUMMY" }
                                                                                                   },
                                                                                'data_type' => 'datetime'
                                                                              },
                                                             'mail' => {
                                                                         'is_nullable' => 0,
                                                                         'size' => 255,
                                                                         'data_type' => 'varchar'
                                                                       }
                                                           },
                                             '_unique_constraints' => {
                                                                        'mail_UNIQUE' => [
                                                                                           'mail'
                                                                                         ],
                                                                        'primary' => $VAR1->{'result_source'}{'_primaries'}
                                                                      },
                                             'result_class' => 'HiltTest::Schema::Result::User',
                                             '_ordered_columns' => [
                                                                     'user_id',
                                                                     'mail',
                                                                     'first_name',
                                                                     'last_name',
                                                                     'address',
                                                                     'date_create',
                                                                     'date_update'
                                                                   ],
                                             'resultset_class' => 'DBIx::Class::ResultSet',
                                             'resultset_attributes' => {},
                                             'source_name' => 'User',
                                             'schema' => bless( {
                                                                  'class_mappings' => {
                                                                                        'HiltTest::Schema::Result::User' => 'User'
                                                                                      },
                                                                  'source_registrations' => {
                                                                                              'User' => $VAR1->{'result_source'}
                                                                                            },
                                                                  'storage' => bless( {
                                                                                        '_dbic_connect_attributes' => {
                                                                                                                        'ShowErrorStatement' => 1,
                                                                                                                        'PrintError' => 0,
                                                                                                                        'AutoCommit' => 1,
                                                                                                                        'RaiseError' => 1
                                                                                                                      },
                                                                                        '_sql_maker' => bless( {
                                                                                                                 'sqlfalse' => '0=1',
                                                                                                                 'array_datatypes' => 1,
                                                                                                                 'inequality_op' => qr/^( != | <> )$/ix,
                                                                                                                 'logic' => 'OR',
                                                                                                                 'unary_ops' => [
                                                                                                                                  {
                                                                                                                                    'regex' => qr/^ and  (?: [_\s]? \d+ )? $/ix,
                                                                                                                                    'handler' => '_where_op_ANDOR'
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_ANDOR',
                                                                                                                                    'regex' => qr/^ or   (?: [_\s]? \d+ )? $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_NEST',
                                                                                                                                    'regex' => qr/^ nest (?: [_\s]? \d+ )? $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_BOOL',
                                                                                                                                    'regex' => qr/^ (?: not \s )? bool     $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'regex' => qr/^ ident                  $/ix,
                                                                                                                                    'handler' => '_where_op_IDENT'
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_VALUE',
                                                                                                                                    'regex' => qr/^ value                  $/ix
                                                                                                                                  }
                                                                                                                                ],
                                                                                                                 'name_sep' => '.',
                                                                                                                 'special_ops' => [
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ (?: not \s )? between $/ix,
                                                                                                                                      'handler' => '_where_field_BETWEEN'
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ (?: not \s )? in      $/ix,
                                                                                                                                      'handler' => '_where_field_IN'
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ ident                 $/ix,
                                                                                                                                      'handler' => '_where_op_IDENT'
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'handler' => '_where_op_VALUE',
                                                                                                                                      'regex' => qr/^ value                 $/ix
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ is (?: \s+ not )?     $/ix,
                                                                                                                                      'handler' => '_where_field_IS'
                                                                                                                                    }
                                                                                                                                  ],
                                                                                                                 'sqltrue' => '1=1',
                                                                                                                 'not_like_op' => qr/^ (is\s+)? not \s+ r?like $/ix,
                                                                                                                 'cmp' => '=',
                                                                                                                 'injection_guard' => qr/
    \;
      |
    ^ \s* go \s
  /mix,
                                                                                                                 'like_op' => qr/^ (is\s+)? r?like $/ix,
                                                                                                                 'limit_dialect' => 'LimitXY',
                                                                                                                 'equality_op' => qr/^( \= | \= )$/ix,
                                                                                                                 'bindtype' => 'columns'
                                                                                                               }, 'DBIx::Class::SQLMaker::MySQL' ),
                                                                                        '_sql_maker_opts' => {},
                                                                                        '_driver_determined' => 1,
                                                                                        '_in_do_block' => 0,
                                                                                        'savepoints' => [],
                                                                                        '_dbh' => bless( {}, 'DBI::db' ),
                                                                                        '_dbh_autocommit' => 1,
                                                                                        'transaction_depth' => 0,
                                                                                        '_conn_pid' => 9062,
                                                                                        '_connect_info' => [
                                                                                                             'dbi:mysql:database=hilt_test',
                                                                                                             'root',
                                                                                                             'MySQL@'
                                                                                                           ],
                                                                                        '_dbi_connect_info' => [
                                                                                                                 'dbi:mysql:database=hilt_test',
                                                                                                                 'root',
                                                                                                                 'MySQL@',
                                                                                                                 $VAR1->{'result_source'}{'schema'}{'storage'}{'_dbic_connect_attributes'}
                                                                                                               ],
                                                                                        'schema' => $VAR1->{'result_source'}{'schema'},
                                                                                        '_dbh_details' => {
                                                                                                            'info' => {
                                                                                                                        'normalized_dbms_version' => '5.007016',
                                                                                                                        'dbms_version' => '5.7.16-0ubuntu0.16.04.1'
                                                                                                                      }
                                                                                                          }
                                                                                      }, 'DBIx::Class::Storage::DBI::mysql' )
                                                                }, 'HiltTest::Schema' ),
                                             'name' => 'users',
                                             '_relationships' => {}
                                           }, 'DBIx::Class::ResultSource::Table' ),
                 'pager' => undef,
                 '_attrs' => {
                               'from' => [
                                           {
                                             '-rsrc' => $VAR1->{'result_source'},
                                             '-alias' => 'me',
                                             'me' => 'users'
                                           }
                                         ],
                               '_last_sqlmaker_alias_map' => undef,
                               'as' => [
                                         'user_id',
                                         'mail',
                                         'first_name',
                                         'last_name',
                                         'address',
                                         'date_create',
                                         'date_update'
                                       ],
                               'result_source' => $VAR1->{'result_source'},
                               'alias' => 'me',
                               '_simple_passthrough_construction' => 1,
                               'select' => [
                                             'me.user_id',
                                             'me.mail',
                                             'me.first_name',
                                             'me.last_name',
                                             'me.address',
                                             'me.date_create',
                                             'me.date_update'
                                           ]
                             },
                 'cursor' => bless( {
                                      'sth' => undef,
                                      'args' => [
                                                  $VAR1->{'_attrs'}{'from'},
                                                  $VAR1->{'_attrs'}{'select'},
                                                  undef,
                                                  $VAR1->{'_attrs'}
                                                ],
                                      'storage' => $VAR1->{'result_source'}{'schema'}{'storage'},
                                      'attrs' => $VAR1->{'_attrs'}
                                    }, 'DBIx::Class::Storage::DBI::Cursor' )
               }, 'DBIx::Class::ResultSet' );

[Sat Nov 12 21:58:17 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 21:58:17 2016] [debug] Dump req_info = $VAR1 = {
          'sort' => {
                    'user_id' => 'DESC'
                  },
          'page' => 1,
          'limit' => 20
        };

[Sat Nov 12 21:58:17 2016] [debug] 200 OK (0.044133s, 22.659/s)
[Sat Nov 12 22:16:32 2016] [debug] GET "/users/list"
[Sat Nov 12 22:16:32 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 22:16:32 2016] [debug] Dump rs = $VAR1 = bless( {
                 '_result_class' => 'HiltTest::Schema::Result::User',
                 'cond' => undef,
                 'cursor' => bless( {
                                      'storage' => bless( {
                                                            '_dbic_connect_attributes' => {
                                                                                            'RaiseError' => 1,
                                                                                            'AutoCommit' => 1,
                                                                                            'ShowErrorStatement' => 1,
                                                                                            'PrintError' => 0
                                                                                          },
                                                            '_dbh_autocommit' => 1,
                                                            '_conn_pid' => 9291,
                                                            '_connect_info' => [
                                                                                 'dbi:mysql:database=hilt_test',
                                                                                 'root',
                                                                                 'MySQL@'
                                                                               ],
                                                            '_in_do_block' => 0,
                                                            'savepoints' => [],
                                                            '_dbh' => bless( {}, 'DBI::db' ),
                                                            '_sql_maker_opts' => {},
                                                            '_sql_maker' => bless( {
                                                                                     'not_like_op' => qr/^ (is\s+)? not \s+ r?like $/ix,
                                                                                     'injection_guard' => qr/
    \;
      |
    ^ \s* go \s
  /mix,
                                                                                     'logic' => 'OR',
                                                                                     'unary_ops' => [
                                                                                                      {
                                                                                                        'regex' => qr/^ and  (?: [_\s]? \d+ )? $/ix,
                                                                                                        'handler' => '_where_op_ANDOR'
                                                                                                      },
                                                                                                      {
                                                                                                        'regex' => qr/^ or   (?: [_\s]? \d+ )? $/ix,
                                                                                                        'handler' => '_where_op_ANDOR'
                                                                                                      },
                                                                                                      {
                                                                                                        'handler' => '_where_op_NEST',
                                                                                                        'regex' => qr/^ nest (?: [_\s]? \d+ )? $/ix
                                                                                                      },
                                                                                                      {
                                                                                                        'handler' => '_where_op_BOOL',
                                                                                                        'regex' => qr/^ (?: not \s )? bool     $/ix
                                                                                                      },
                                                                                                      {
                                                                                                        'regex' => qr/^ ident                  $/ix,
                                                                                                        'handler' => '_where_op_IDENT'
                                                                                                      },
                                                                                                      {
                                                                                                        'regex' => qr/^ value                  $/ix,
                                                                                                        'handler' => '_where_op_VALUE'
                                                                                                      }
                                                                                                    ],
                                                                                     'special_ops' => [
                                                                                                        {
                                                                                                          'handler' => '_where_field_BETWEEN',
                                                                                                          'regex' => qr/^ (?: not \s )? between $/ix
                                                                                                        },
                                                                                                        {
                                                                                                          'regex' => qr/^ (?: not \s )? in      $/ix,
                                                                                                          'handler' => '_where_field_IN'
                                                                                                        },
                                                                                                        {
                                                                                                          'handler' => '_where_op_IDENT',
                                                                                                          'regex' => qr/^ ident                 $/ix
                                                                                                        },
                                                                                                        {
                                                                                                          'regex' => qr/^ value                 $/ix,
                                                                                                          'handler' => '_where_op_VALUE'
                                                                                                        },
                                                                                                        {
                                                                                                          'handler' => '_where_field_IS',
                                                                                                          'regex' => qr/^ is (?: \s+ not )?     $/ix
                                                                                                        }
                                                                                                      ],
                                                                                     'array_datatypes' => 1,
                                                                                     'sqltrue' => '1=1',
                                                                                     'cmp' => '=',
                                                                                     'limit_dialect' => 'LimitXY',
                                                                                     'equality_op' => qr/^( \= | \= )$/ix,
                                                                                     'bindtype' => 'columns',
                                                                                     'inequality_op' => qr/^( != | <> )$/ix,
                                                                                     'sqlfalse' => '0=1',
                                                                                     'name_sep' => '.',
                                                                                     'like_op' => qr/^ (is\s+)? r?like $/ix
                                                                                   }, 'DBIx::Class::SQLMaker::MySQL' ),
                                                            '_driver_determined' => 1,
                                                            '_dbi_connect_info' => [
                                                                                     'dbi:mysql:database=hilt_test',
                                                                                     'root',
                                                                                     'MySQL@',
                                                                                     $VAR1->{'cursor'}{'storage'}{'_dbic_connect_attributes'}
                                                                                   ],
                                                            'schema' => bless( {
                                                                                 'source_registrations' => {
                                                                                                             'User' => bless( {
                                                                                                                                '_ordered_columns' => [
                                                                                                                                                        'user_id',
                                                                                                                                                        'mail',
                                                                                                                                                        'first_name',
                                                                                                                                                        'last_name',
                                                                                                                                                        'address',
                                                                                                                                                        'date_create',
                                                                                                                                                        'date_update'
                                                                                                                                                      ],
                                                                                                                                '_primaries' => [
                                                                                                                                                  'user_id'
                                                                                                                                                ],
                                                                                                                                '_columns' => {
                                                                                                                                                'date_create' => {
                                                                                                                                                                   'datetime_undef_if_invalid' => 1,
                                                                                                                                                                   '_inflate_info' => {
                                                                                                                                                                                        'inflate' => sub { "DUMMY" },
                                                                                                                                                                                        'deflate' => sub { "DUMMY" }
                                                                                                                                                                                      },
                                                                                                                                                                   '_ic_dt_method' => 'datetime',
                                                                                                                                                                   'data_type' => 'datetime',
                                                                                                                                                                   'is_nullable' => 0,
                                                                                                                                                                   'default_value' => 'CURRENT_TIMESTAMP'
                                                                                                                                                                 },
                                                                                                                                                'date_update' => {
                                                                                                                                                                   'data_type' => 'datetime',
                                                                                                                                                                   'is_nullable' => 0,
                                                                                                                                                                   'default_value' => 'CURRENT_TIMESTAMP',
                                                                                                                                                                   '_inflate_info' => {
                                                                                                                                                                                        'deflate' => sub { "DUMMY" },
                                                                                                                                                                                        'inflate' => sub { "DUMMY" }
                                                                                                                                                                                      },
                                                                                                                                                                   '_ic_dt_method' => 'datetime',
                                                                                                                                                                   'datetime_undef_if_invalid' => 1
                                                                                                                                                                 },
                                                                                                                                                'first_name' => {
                                                                                                                                                                  'data_type' => 'varchar',
                                                                                                                                                                  'default_value' => '',
                                                                                                                                                                  'is_nullable' => 0,
                                                                                                                                                                  'size' => 255
                                                                                                                                                                },
                                                                                                                                                'mail' => {
                                                                                                                                                            'size' => 255,
                                                                                                                                                            'data_type' => 'varchar',
                                                                                                                                                            'is_nullable' => 0
                                                                                                                                                          },
                                                                                                                                                'address' => {
                                                                                                                                                               'size' => 500,
                                                                                                                                                               'data_type' => 'varchar',
                                                                                                                                                               'is_nullable' => 0,
                                                                                                                                                               'default_value' => ''
                                                                                                                                                             },
                                                                                                                                                'last_name' => {
                                                                                                                                                                 'is_nullable' => 0,
                                                                                                                                                                 'default_value' => '',
                                                                                                                                                                 'data_type' => 'varchar',
                                                                                                                                                                 'size' => 255
                                                                                                                                                               },
                                                                                                                                                'user_id' => {
                                                                                                                                                               'is_nullable' => 0,
                                                                                                                                                               'is_auto_increment' => 1,
                                                                                                                                                               'data_type' => 'integer',
                                                                                                                                                               'extra' => {
                                                                                                                                                                            'unsigned' => 1
                                                                                                                                                                          }
                                                                                                                                                             }
                                                                                                                                              },
                                                                                                                                'resultset_class' => 'DBIx::Class::ResultSet',
                                                                                                                                '_columns_info_loaded' => 0,
                                                                                                                                'name' => 'users',
                                                                                                                                'resultset_attributes' => {},
                                                                                                                                '_unique_constraints' => {
                                                                                                                                                           'mail_UNIQUE' => [
                                                                                                                                                                              'mail'
                                                                                                                                                                            ],
                                                                                                                                                           'primary' => $VAR1->{'cursor'}{'storage'}{'schema'}{'source_registrations'}{'User'}{'_primaries'}
                                                                                                                                                         },
                                                                                                                                'source_name' => 'User',
                                                                                                                                'result_class' => 'HiltTest::Schema::Result::User',
                                                                                                                                'schema' => $VAR1->{'cursor'}{'storage'}{'schema'},
                                                                                                                                '_relationships' => {}
                                                                                                                              }, 'DBIx::Class::ResultSource::Table' )
                                                                                                           },
                                                                                 'storage' => $VAR1->{'cursor'}{'storage'},
                                                                                 'class_mappings' => {
                                                                                                       'HiltTest::Schema::Result::User' => 'User'
                                                                                                     }
                                                                               }, 'HiltTest::Schema' ),
                                                            'transaction_depth' => 0,
                                                            '_dbh_details' => {
                                                                                '_datatype_map_cache' => {
                                                                                                           'integer' => undef
                                                                                                         },
                                                                                'info' => {
                                                                                            'normalized_dbms_version' => '5.007016',
                                                                                            'dbms_version' => '5.7.16-0ubuntu0.16.04.1'
                                                                                          }
                                                                              }
                                                          }, 'DBIx::Class::Storage::DBI::mysql' ),
                                      'attrs' => {
                                                   'select' => [
                                                                 'me.user_id',
                                                                 'me.mail',
                                                                 'me.first_name',
                                                                 'me.last_name',
                                                                 'me.address',
                                                                 'me.date_create',
                                                                 'me.date_update'
                                                               ],
                                                   'alias' => 'me',
                                                   'as' => [
                                                             'user_id',
                                                             'mail',
                                                             'first_name',
                                                             'last_name',
                                                             'address',
                                                             'date_create',
                                                             'date_update'
                                                           ],
                                                   'bind' => [],
                                                   'sort' => {
                                                             'user_id' => 'DESC'
                                                           },
                                                   'result_source' => $VAR1->{'cursor'}{'storage'}{'schema'}{'source_registrations'}{'User'},
                                                   'rows' => 10,
                                                   '_last_sqlmaker_alias_map' => undef,
                                                   'offset' => 0,
                                                   'limit' => 20,
                                                   'from' => [
                                                               {
                                                                 '-rsrc' => $VAR1->{'cursor'}{'storage'}{'schema'}{'source_registrations'}{'User'},
                                                                 '-alias' => 'me',
                                                                 'me' => 'users'
                                                               }
                                                             ],
                                                   '_simple_passthrough_construction' => 1
                                                 },
                                      'sth' => undef,
                                      'args' => [
                                                  $VAR1->{'cursor'}{'attrs'}{'from'},
                                                  $VAR1->{'cursor'}{'attrs'}{'select'},
                                                  undef,
                                                  $VAR1->{'cursor'}{'attrs'}
                                                ]
                                    }, 'DBIx::Class::Storage::DBI::Cursor' ),
                 '_attrs' => $VAR1->{'cursor'}{'attrs'},
                 'attrs' => {
                              'rows' => 10,
                              'page' => 1,
                              'limit' => 20,
                              'sort' => $VAR1->{'cursor'}{'attrs'}{'sort'},
                              'bind' => $VAR1->{'cursor'}{'attrs'}{'bind'},
                              'alias' => 'me'
                            },
                 '_result_inflator' => {
                                         'is_hri' => 0,
                                         'cref' => sub { "DUMMY" },
                                         'is_core_row' => 1
                                       },
                 'pager' => undef,
                 'result_source' => $VAR1->{'cursor'}{'storage'}{'schema'}{'source_registrations'}{'User'}
               }, 'DBIx::Class::ResultSet' );

[Sat Nov 12 22:16:32 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 22:16:32 2016] [debug] Dump req_info = $VAR1 = {
          'page' => 1,
          'limit' => 20,
          'sort' => {
                    'user_id' => 'DESC'
                  }
        };

[Sat Nov 12 22:16:32 2016] [debug] 200 OK (0.044714s, 22.364/s)
[Sat Nov 12 22:20:53 2016] [debug] GET "/users/list"
[Sat Nov 12 22:20:53 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 22:20:53 2016] [debug] Dump rs = $VAR1 = bless( {
                 'pager' => undef,
                 'attrs' => {
                              'page' => 1,
                              'alias' => 'me',
                              'limit' => 20,
                              'rows' => 10,
                              'bind' => []
                            },
                 'result_source' => bless( {
                                             'resultset_class' => 'DBIx::Class::ResultSet',
                                             '_primaries' => [
                                                               'user_id'
                                                             ],
                                             '_ordered_columns' => [
                                                                     'user_id',
                                                                     'mail',
                                                                     'first_name',
                                                                     'last_name',
                                                                     'address',
                                                                     'date_create',
                                                                     'date_update'
                                                                   ],
                                             '_columns' => {
                                                             'date_update' => {
                                                                                'is_nullable' => 0,
                                                                                '_ic_dt_method' => 'datetime',
                                                                                'datetime_undef_if_invalid' => 1,
                                                                                'default_value' => 'CURRENT_TIMESTAMP',
                                                                                '_inflate_info' => {
                                                                                                     'inflate' => sub { "DUMMY" },
                                                                                                     'deflate' => sub { "DUMMY" }
                                                                                                   },
                                                                                'data_type' => 'datetime'
                                                                              },
                                                             'address' => {
                                                                            'size' => 500,
                                                                            'is_nullable' => 0,
                                                                            'data_type' => 'varchar',
                                                                            'default_value' => ''
                                                                          },
                                                             'first_name' => {
                                                                               'is_nullable' => 0,
                                                                               'size' => 255,
                                                                               'default_value' => '',
                                                                               'data_type' => 'varchar'
                                                                             },
                                                             'last_name' => {
                                                                              'size' => 255,
                                                                              'is_nullable' => 0,
                                                                              'data_type' => 'varchar',
                                                                              'default_value' => ''
                                                                            },
                                                             'user_id' => {
                                                                            'extra' => {
                                                                                         'unsigned' => 1
                                                                                       },
                                                                            'data_type' => 'integer',
                                                                            'is_auto_increment' => 1,
                                                                            'is_nullable' => 0
                                                                          },
                                                             'date_create' => {
                                                                                '_ic_dt_method' => 'datetime',
                                                                                'datetime_undef_if_invalid' => 1,
                                                                                'is_nullable' => 0,
                                                                                'data_type' => 'datetime',
                                                                                'default_value' => 'CURRENT_TIMESTAMP',
                                                                                '_inflate_info' => {
                                                                                                     'deflate' => sub { "DUMMY" },
                                                                                                     'inflate' => sub { "DUMMY" }
                                                                                                   }
                                                                              },
                                                             'mail' => {
                                                                         'data_type' => 'varchar',
                                                                         'is_nullable' => 0,
                                                                         'size' => 255
                                                                       }
                                                           },
                                             'schema' => bless( {
                                                                  'source_registrations' => {
                                                                                              'User' => $VAR1->{'result_source'}
                                                                                            },
                                                                  'class_mappings' => {
                                                                                        'HiltTest::Schema::Result::User' => 'User'
                                                                                      },
                                                                  'storage' => bless( {
                                                                                        '_dbh_details' => {
                                                                                                            'info' => {
                                                                                                                        'normalized_dbms_version' => '5.007016',
                                                                                                                        'dbms_version' => '5.7.16-0ubuntu0.16.04.1'
                                                                                                                      },
                                                                                                            '_datatype_map_cache' => {
                                                                                                                                       'integer' => undef
                                                                                                                                     }
                                                                                                          },
                                                                                        '_dbi_connect_info' => [
                                                                                                                 'dbi:mysql:database=hilt_test',
                                                                                                                 'root',
                                                                                                                 'MySQL@',
                                                                                                                 {
                                                                                                                   'ShowErrorStatement' => 1,
                                                                                                                   'PrintError' => 0,
                                                                                                                   'RaiseError' => 1,
                                                                                                                   'AutoCommit' => 1
                                                                                                                 }
                                                                                                               ],
                                                                                        '_sql_maker' => bless( {
                                                                                                                 'inequality_op' => qr/^( != | <> )$/ix,
                                                                                                                 'not_like_op' => qr/^ (is\s+)? not \s+ r?like $/ix,
                                                                                                                 'cmp' => '=',
                                                                                                                 'special_ops' => [
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ (?: not \s )? between $/ix,
                                                                                                                                      'handler' => '_where_field_BETWEEN'
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ (?: not \s )? in      $/ix,
                                                                                                                                      'handler' => '_where_field_IN'
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'handler' => '_where_op_IDENT',
                                                                                                                                      'regex' => qr/^ ident                 $/ix
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ value                 $/ix,
                                                                                                                                      'handler' => '_where_op_VALUE'
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                      'regex' => qr/^ is (?: \s+ not )?     $/ix,
                                                                                                                                      'handler' => '_where_field_IS'
                                                                                                                                    }
                                                                                                                                  ],
                                                                                                                 'name_sep' => '.',
                                                                                                                 'limit_dialect' => 'LimitXY',
                                                                                                                 'injection_guard' => qr/
    \;
      |
    ^ \s* go \s
  /mix,
                                                                                                                 'like_op' => qr/^ (is\s+)? r?like $/ix,
                                                                                                                 'array_datatypes' => 1,
                                                                                                                 'logic' => 'OR',
                                                                                                                 'sqltrue' => '1=1',
                                                                                                                 'unary_ops' => [
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_ANDOR',
                                                                                                                                    'regex' => qr/^ and  (?: [_\s]? \d+ )? $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_ANDOR',
                                                                                                                                    'regex' => qr/^ or   (?: [_\s]? \d+ )? $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'regex' => qr/^ nest (?: [_\s]? \d+ )? $/ix,
                                                                                                                                    'handler' => '_where_op_NEST'
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_BOOL',
                                                                                                                                    'regex' => qr/^ (?: not \s )? bool     $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'handler' => '_where_op_IDENT',
                                                                                                                                    'regex' => qr/^ ident                  $/ix
                                                                                                                                  },
                                                                                                                                  {
                                                                                                                                    'regex' => qr/^ value                  $/ix,
                                                                                                                                    'handler' => '_where_op_VALUE'
                                                                                                                                  }
                                                                                                                                ],
                                                                                                                 'sqlfalse' => '0=1',
                                                                                                                 'equality_op' => qr/^( \= | \= )$/ix,
                                                                                                                 'bindtype' => 'columns'
                                                                                                               }, 'DBIx::Class::SQLMaker::MySQL' ),
                                                                                        '_driver_determined' => 1,
                                                                                        '_in_do_block' => 0,
                                                                                        '_conn_pid' => 9370,
                                                                                        '_dbh_autocommit' => 1,
                                                                                        'transaction_depth' => 0,
                                                                                        '_connect_info' => [
                                                                                                             'dbi:mysql:database=hilt_test',
                                                                                                             'root',
                                                                                                             'MySQL@'
                                                                                                           ],
                                                                                        '_dbic_connect_attributes' => $VAR1->{'result_source'}{'schema'}{'storage'}{'_dbi_connect_info'}[3],
                                                                                        '_dbh' => bless( {}, 'DBI::db' ),
                                                                                        'schema' => $VAR1->{'result_source'}{'schema'},
                                                                                        'savepoints' => [],
                                                                                        '_sql_maker_opts' => {}
                                                                                      }, 'DBIx::Class::Storage::DBI::mysql' )
                                                                }, 'HiltTest::Schema' ),
                                             'resultset_attributes' => {},
                                             '_columns_info_loaded' => 0,
                                             'result_class' => 'HiltTest::Schema::Result::User',
                                             '_relationships' => {},
                                             'name' => 'users',
                                             '_unique_constraints' => {
                                                                        'mail_UNIQUE' => [
                                                                                           'mail'
                                                                                         ],
                                                                        'primary' => $VAR1->{'result_source'}{'_primaries'}
                                                                      },
                                             'source_name' => 'User'
                                           }, 'DBIx::Class::ResultSource::Table' ),
                 '_result_class' => 'HiltTest::Schema::Result::User',
                 'cursor' => bless( {
                                      'sth' => undef,
                                      'args' => [
                                                  [
                                                    {
                                                      '-alias' => 'me',
                                                      '-rsrc' => $VAR1->{'result_source'},
                                                      'me' => 'users'
                                                    }
                                                  ],
                                                  [
                                                    'me.user_id',
                                                    'me.mail',
                                                    'me.first_name',
                                                    'me.last_name',
                                                    'me.address',
                                                    'me.date_create',
                                                    'me.date_update'
                                                  ],
                                                  undef,
                                                  {
                                                    '_simple_passthrough_construction' => 1,
                                                    'offset' => 0,
                                                    'result_source' => $VAR1->{'result_source'},
                                                    'from' => $VAR1->{'cursor'}{'args'}[0],
                                                    'as' => [
                                                              'user_id',
                                                              'mail',
                                                              'first_name',
                                                              'last_name',
                                                              'address',
                                                              'date_create',
                                                              'date_update'
                                                            ],
                                                    '_last_sqlmaker_alias_map' => undef,
                                                    'select' => $VAR1->{'cursor'}{'args'}[1],
                                                    'alias' => 'me',
                                                    'bind' => $VAR1->{'attrs'}{'bind'},
                                                    'limit' => 20,
                                                    'rows' => 10
                                                  }
                                                ],
                                      'storage' => $VAR1->{'result_source'}{'schema'}{'storage'},
                                      'attrs' => $VAR1->{'cursor'}{'args'}[3]
                                    }, 'DBIx::Class::Storage::DBI::Cursor' ),
                 'cond' => undef,
                 '_result_inflator' => {
                                         'is_core_row' => 1,
                                         'is_hri' => 0,
                                         'cref' => sub { "DUMMY" }
                                       },
                 '_attrs' => $VAR1->{'cursor'}{'args'}[3]
               }, 'DBIx::Class::ResultSet' );

[Sat Nov 12 22:20:53 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 22:20:53 2016] [debug] Dump req_info = $VAR1 = {
          'limit' => 20,
          'page' => 1
        };

[Sat Nov 12 22:20:53 2016] [debug] 200 OK (0.051465s, 19.431/s)
[Sat Nov 12 22:21:37 2016] [debug] GET "/users/list"
[Sat Nov 12 22:21:37 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 22:21:37 2016] [debug] Dump rs = $VAR1 = bless( {
                 '_result_inflator' => {
                                         'is_core_row' => 1,
                                         'cref' => sub { "DUMMY" },
                                         'is_hri' => 0
                                       },
                 'cond' => undef,
                 'pager' => undef,
                 '_result_class' => 'HiltTest::Schema::Result::User',
                 'cursor' => bless( {
                                      'args' => [
                                                  [
                                                    {
                                                      '-alias' => 'me',
                                                      'me' => 'users',
                                                      '-rsrc' => bless( {
                                                                          'name' => 'users',
                                                                          '_relationships' => {},
                                                                          'schema' => bless( {
                                                                                               'storage' => bless( {
                                                                                                                     'schema' => $VAR1->{'cursor'}{'args'}[0][0]{'-rsrc'}{'schema'},
                                                                                                                     '_dbi_connect_info' => [
                                                                                                                                              'dbi:mysql:database=hilt_test',
                                                                                                                                              'root',
                                                                                                                                              'MySQL@',
                                                                                                                                              {
                                                                                                                                                'RaiseError' => 1,
                                                                                                                                                'AutoCommit' => 1,
                                                                                                                                                'ShowErrorStatement' => 1,
                                                                                                                                                'PrintError' => 0
                                                                                                                                              }
                                                                                                                                            ],
                                                                                                                     '_sql_maker_opts' => {},
                                                                                                                     'transaction_depth' => 0,
                                                                                                                     '_dbh' => bless( {}, 'DBI::db' ),
                                                                                                                     '_conn_pid' => 9387,
                                                                                                                     '_connect_info' => [
                                                                                                                                          'dbi:mysql:database=hilt_test',
                                                                                                                                          'root',
                                                                                                                                          'MySQL@'
                                                                                                                                        ],
                                                                                                                     '_in_do_block' => 0,
                                                                                                                     '_dbh_autocommit' => 1,
                                                                                                                     '_driver_determined' => 1,
                                                                                                                     '_dbh_details' => {
                                                                                                                                         '_datatype_map_cache' => {
                                                                                                                                                                    'integer' => undef
                                                                                                                                                                  },
                                                                                                                                         'info' => {
                                                                                                                                                     'normalized_dbms_version' => '5.007016',
                                                                                                                                                     'dbms_version' => '5.7.16-0ubuntu0.16.04.1'
                                                                                                                                                   }
                                                                                                                                       },
                                                                                                                     '_dbic_connect_attributes' => $VAR1->{'cursor'}{'args'}[0][0]{'-rsrc'}{'schema'}{'storage'}{'_dbi_connect_info'}[3],
                                                                                                                     '_sql_maker' => bless( {
                                                                                                                                              'limit_dialect' => 'LimitXY',
                                                                                                                                              'special_ops' => [
                                                                                                                                                                 {
                                                                                                                                                                   'regex' => qr/^ (?: not \s )? between $/ix,
                                                                                                                                                                   'handler' => '_where_field_BETWEEN'
                                                                                                                                                                 },
                                                                                                                                                                 {
                                                                                                                                                                   'regex' => qr/^ (?: not \s )? in      $/ix,
                                                                                                                                                                   'handler' => '_where_field_IN'
                                                                                                                                                                 },
                                                                                                                                                                 {
                                                                                                                                                                   'handler' => '_where_op_IDENT',
                                                                                                                                                                   'regex' => qr/^ ident                 $/ix
                                                                                                                                                                 },
                                                                                                                                                                 {
                                                                                                                                                                   'regex' => qr/^ value                 $/ix,
                                                                                                                                                                   'handler' => '_where_op_VALUE'
                                                                                                                                                                 },
                                                                                                                                                                 {
                                                                                                                                                                   'handler' => '_where_field_IS',
                                                                                                                                                                   'regex' => qr/^ is (?: \s+ not )?     $/ix
                                                                                                                                                                 }
                                                                                                                                                               ],
                                                                                                                                              'injection_guard' => qr/
    \;
      |
    ^ \s* go \s
  /mix,
                                                                                                                                              'like_op' => qr/^ (is\s+)? r?like $/ix,
                                                                                                                                              'sqltrue' => '1=1',
                                                                                                                                              'inequality_op' => qr/^( != | <> )$/ix,
                                                                                                                                              'equality_op' => qr/^( \= | \= )$/ix,
                                                                                                                                              'array_datatypes' => 1,
                                                                                                                                              'bindtype' => 'columns',
                                                                                                                                              'logic' => 'OR',
                                                                                                                                              'unary_ops' => [
                                                                                                                                                               {
                                                                                                                                                                 'regex' => qr/^ and  (?: [_\s]? \d+ )? $/ix,
                                                                                                                                                                 'handler' => '_where_op_ANDOR'
                                                                                                                                                               },
                                                                                                                                                               {
                                                                                                                                                                 'regex' => qr/^ or   (?: [_\s]? \d+ )? $/ix,
                                                                                                                                                                 'handler' => '_where_op_ANDOR'
                                                                                                                                                               },
                                                                                                                                                               {
                                                                                                                                                                 'handler' => '_where_op_NEST',
                                                                                                                                                                 'regex' => qr/^ nest (?: [_\s]? \d+ )? $/ix
                                                                                                                                                               },
                                                                                                                                                               {
                                                                                                                                                                 'regex' => qr/^ (?: not \s )? bool     $/ix,
                                                                                                                                                                 'handler' => '_where_op_BOOL'
                                                                                                                                                               },
                                                                                                                                                               {
                                                                                                                                                                 'handler' => '_where_op_IDENT',
                                                                                                                                                                 'regex' => qr/^ ident                  $/ix
                                                                                                                                                               },
                                                                                                                                                               {
                                                                                                                                                                 'regex' => qr/^ value                  $/ix,
                                                                                                                                                                 'handler' => '_where_op_VALUE'
                                                                                                                                                               }
                                                                                                                                                             ],
                                                                                                                                              'cmp' => '=',
                                                                                                                                              'not_like_op' => qr/^ (is\s+)? not \s+ r?like $/ix,
                                                                                                                                              'sqlfalse' => '0=1',
                                                                                                                                              'name_sep' => '.'
                                                                                                                                            }, 'DBIx::Class::SQLMaker::MySQL' ),
                                                                                                                     'savepoints' => []
                                                                                                                   }, 'DBIx::Class::Storage::DBI::mysql' ),
                                                                                               'source_registrations' => {
                                                                                                                           'User' => $VAR1->{'cursor'}{'args'}[0][0]{'-rsrc'}
                                                                                                                         },
                                                                                               'class_mappings' => {
                                                                                                                     'HiltTest::Schema::Result::User' => 'User'
                                                                                                                   }
                                                                                             }, 'HiltTest::Schema' ),
                                                                          'resultset_class' => 'DBIx::Class::ResultSet',
                                                                          '_ordered_columns' => [
                                                                                                  'user_id',
                                                                                                  'mail',
                                                                                                  'first_name',
                                                                                                  'last_name',
                                                                                                  'address',
                                                                                                  'date_create',
                                                                                                  'date_update'
                                                                                                ],
                                                                          'resultset_attributes' => {},
                                                                          'source_name' => 'User',
                                                                          '_columns' => {
                                                                                          'date_create' => {
                                                                                                             'is_nullable' => 0,
                                                                                                             '_ic_dt_method' => 'datetime',
                                                                                                             'data_type' => 'datetime',
                                                                                                             '_inflate_info' => {
                                                                                                                                  'deflate' => sub { "DUMMY" },
                                                                                                                                  'inflate' => sub { "DUMMY" }
                                                                                                                                },
                                                                                                             'default_value' => 'CURRENT_TIMESTAMP',
                                                                                                             'datetime_undef_if_invalid' => 1
                                                                                                           },
                                                                                          'mail' => {
                                                                                                      'size' => 255,
                                                                                                      'is_nullable' => 0,
                                                                                                      'data_type' => 'varchar'
                                                                                                    },
                                                                                          'last_name' => {
                                                                                                           'size' => 255,
                                                                                                           'default_value' => '',
                                                                                                           'data_type' => 'varchar',
                                                                                                           'is_nullable' => 0
                                                                                                         },
                                                                                          'address' => {
                                                                                                         'data_type' => 'varchar',
                                                                                                         'is_nullable' => 0,
                                                                                                         'size' => 500,
                                                                                                         'default_value' => ''
                                                                                                       },
                                                                                          'first_name' => {
                                                                                                            'default_value' => '',
                                                                                                            'size' => 255,
                                                                                                            'is_nullable' => 0,
                                                                                                            'data_type' => 'varchar'
                                                                                                          },
                                                                                          'user_id' => {
                                                                                                         'extra' => {
                                                                                                                      'unsigned' => 1
                                                                                                                    },
                                                                                                         'is_auto_increment' => 1,
                                                                                                         'is_nullable' => 0,
                                                                                                         'data_type' => 'integer'
                                                                                                       },
                                                                                          'date_update' => {
                                                                                                             'is_nullable' => 0,
                                                                                                             '_ic_dt_method' => 'datetime',
                                                                                                             'data_type' => 'datetime',
                                                                                                             '_inflate_info' => {
                                                                                                                                  'deflate' => sub { "DUMMY" },
                                                                                                                                  'inflate' => sub { "DUMMY" }
                                                                                                                                },
                                                                                                             'datetime_undef_if_invalid' => 1,
                                                                                                             'default_value' => 'CURRENT_TIMESTAMP'
                                                                                                           }
                                                                                        },
                                                                          'result_class' => 'HiltTest::Schema::Result::User',
                                                                          '_primaries' => [
                                                                                            'user_id'
                                                                                          ],
                                                                          '_columns_info_loaded' => 0,
                                                                          '_unique_constraints' => {
                                                                                                     'primary' => $VAR1->{'cursor'}{'args'}[0][0]{'-rsrc'}{'_primaries'},
                                                                                                     'mail_UNIQUE' => [
                                                                                                                        'mail'
                                                                                                                      ]
                                                                                                   }
                                                                        }, 'DBIx::Class::ResultSource::Table' )
                                                    }
                                                  ],
                                                  [
                                                    'me.user_id',
                                                    'me.mail',
                                                    'me.first_name',
                                                    'me.last_name',
                                                    'me.address',
                                                    'me.date_create',
                                                    'me.date_update'
                                                  ],
                                                  undef,
                                                  {
                                                    'as' => [
                                                              'user_id',
                                                              'mail',
                                                              'first_name',
                                                              'last_name',
                                                              'address',
                                                              'date_create',
                                                              'date_update'
                                                            ],
                                                    'offset' => 0,
                                                    'result_source' => $VAR1->{'cursor'}{'args'}[0][0]{'-rsrc'},
                                                    'limit' => 20,
                                                    'select' => $VAR1->{'cursor'}{'args'}[1],
                                                    '_last_sqlmaker_alias_map' => undef,
                                                    '_simple_passthrough_construction' => 1,
                                                    'bind' => [],
                                                    'alias' => 'me',
                                                    'from' => $VAR1->{'cursor'}{'args'}[0],
                                                    'rows' => 10
                                                  }
                                                ],
                                      'storage' => $VAR1->{'cursor'}{'args'}[0][0]{'-rsrc'}{'schema'}{'storage'},
                                      'sth' => undef,
                                      'attrs' => $VAR1->{'cursor'}{'args'}[3]
                                    }, 'DBIx::Class::Storage::DBI::Cursor' ),
                 'attrs' => {
                              'alias' => 'me',
                              'page' => 1,
                              'bind' => $VAR1->{'cursor'}{'args'}[3]{'bind'},
                              'limit' => 20,
                              'rows' => 10
                            },
                 'result_source' => $VAR1->{'cursor'}{'args'}[0][0]{'-rsrc'},
                 '_attrs' => $VAR1->{'cursor'}{'args'}[3]
               }, 'DBIx::Class::ResultSet' );

[Sat Nov 12 22:21:37 2016] [debug] Dump data = $VAR1 = 1;

[Sat Nov 12 22:21:37 2016] [debug] Dump req_info = $VAR1 = {
          'limit' => 20,
          'page' => 1
        };

[Sat Nov 12 22:21:37 2016] [debug] 200 OK (0.044705s, 22.369/s)
[Sat Nov 12 22:26:33 2016] [debug] GET "/users/list"
[Sat Nov 12 22:26:33 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 22:26:33 2016] [debug] Dump rs = $VAR1 = bless( {
                 '_attrs' => {
                               'rows' => 10,
                               'offset' => 0,
                               'from' => [
                                           {
                                             '-rsrc' => bless( {
                                                                 '_primaries' => [
                                                                                   'user_id'
                                                                                 ],
                                                                 'name' => 'users',
                                                                 '_relationships' => {},
                                                                 '_columns' => {
                                                                                 'date_create' => {
                                                                                                    '_inflate_info' => {
                                                                                                                         'deflate' => sub { "DUMMY" },
                                                                                                                         'inflate' => sub { "DUMMY" }
                                                                                                                       },
                                                                                                    'datetime_undef_if_invalid' => 1,
                                                                                                    'default_value' => 'CURRENT_TIMESTAMP',
                                                                                                    'is_nullable' => 0,
                                                                                                    'data_type' => 'datetime',
                                                                                                    '_ic_dt_method' => 'datetime'
                                                                                                  },
                                                                                 'address' => {
                                                                                                'default_value' => '',
                                                                                                'data_type' => 'varchar',
                                                                                                'is_nullable' => 0,
                                                                                                'size' => 500
                                                                                              },
                                                                                 'date_update' => {
                                                                                                    '_inflate_info' => {
                                                                                                                         'inflate' => sub { "DUMMY" },
                                                                                                                         'deflate' => sub { "DUMMY" }
                                                                                                                       },
                                                                                                    'default_value' => 'CURRENT_TIMESTAMP',
                                                                                                    'datetime_undef_if_invalid' => 1,
                                                                                                    'is_nullable' => 0,
                                                                                                    'data_type' => 'datetime',
                                                                                                    '_ic_dt_method' => 'datetime'
                                                                                                  },
                                                                                 'last_name' => {
                                                                                                  'size' => 255,
                                                                                                  'is_nullable' => 0,
                                                                                                  'data_type' => 'varchar',
                                                                                                  'default_value' => ''
                                                                                                },
                                                                                 'first_name' => {
                                                                                                   'default_value' => '',
                                                                                                   'data_type' => 'varchar',
                                                                                                   'is_nullable' => 0,
                                                                                                   'size' => 255
                                                                                                 },
                                                                                 'user_id' => {
                                                                                                'extra' => {
                                                                                                             'unsigned' => 1
                                                                                                           },
                                                                                                'data_type' => 'integer',
                                                                                                'is_nullable' => 0,
                                                                                                'is_auto_increment' => 1
                                                                                              },
                                                                                 'mail' => {
                                                                                             'data_type' => 'varchar',
                                                                                             'is_nullable' => 0,
                                                                                             'size' => 255
                                                                                           }
                                                                               },
                                                                 'source_name' => 'User',
                                                                 '_unique_constraints' => {
                                                                                            'mail_UNIQUE' => [
                                                                                                               'mail'
                                                                                                             ],
                                                                                            'primary' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'}{'_primaries'}
                                                                                          },
                                                                 'result_class' => 'HiltTest::Schema::Result::User',
                                                                 '_ordered_columns' => [
                                                                                         'user_id',
                                                                                         'mail',
                                                                                         'first_name',
                                                                                         'last_name',
                                                                                         'address',
                                                                                         'date_create',
                                                                                         'date_update'
                                                                                       ],
                                                                 'resultset_class' => 'DBIx::Class::ResultSet',
                                                                 'resultset_attributes' => {},
                                                                 'schema' => bless( {
                                                                                      'source_registrations' => {
                                                                                                                  'User' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'}
                                                                                                                },
                                                                                      'storage' => bless( {
                                                                                                            '_driver_determined' => 1,
                                                                                                            '_sql_maker_opts' => {},
                                                                                                            '_connect_info' => [
                                                                                                                                 'dbi:mysql:database=hilt_test',
                                                                                                                                 'root',
                                                                                                                                 'MySQL@'
                                                                                                                               ],
                                                                                                            'savepoints' => [],
                                                                                                            '_dbh_details' => {
                                                                                                                                'info' => {
                                                                                                                                            'normalized_dbms_version' => '5.007016',
                                                                                                                                            'dbms_version' => '5.7.16-0ubuntu0.16.04.1'
                                                                                                                                          },
                                                                                                                                '_datatype_map_cache' => {
                                                                                                                                                           'integer' => undef
                                                                                                                                                         }
                                                                                                                              },
                                                                                                            'schema' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'}{'schema'},
                                                                                                            '_dbh_autocommit' => 1,
                                                                                                            'transaction_depth' => 0,
                                                                                                            '_sql_maker' => bless( {
                                                                                                                                     'sqlfalse' => '0=1',
                                                                                                                                     'injection_guard' => qr/
    \;
      |
    ^ \s* go \s
  /mix,
                                                                                                                                     'bindtype' => 'columns',
                                                                                                                                     'equality_op' => qr/^( \= | \= )$/ix,
                                                                                                                                     'like_op' => qr/^ (is\s+)? r?like $/ix,
                                                                                                                                     'array_datatypes' => 1,
                                                                                                                                     'inequality_op' => qr/^( != | <> )$/ix,
                                                                                                                                     'not_like_op' => qr/^ (is\s+)? not \s+ r?like $/ix,
                                                                                                                                     'name_sep' => '.',
                                                                                                                                     'logic' => 'OR',
                                                                                                                                     'unary_ops' => [
                                                                                                                                                      {
                                                                                                                                                        'handler' => '_where_op_ANDOR',
                                                                                                                                                        'regex' => qr/^ and  (?: [_\s]? \d+ )? $/ix
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        'handler' => '_where_op_ANDOR',
                                                                                                                                                        'regex' => qr/^ or   (?: [_\s]? \d+ )? $/ix
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        'handler' => '_where_op_NEST',
                                                                                                                                                        'regex' => qr/^ nest (?: [_\s]? \d+ )? $/ix
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        'handler' => '_where_op_BOOL',
                                                                                                                                                        'regex' => qr/^ (?: not \s )? bool     $/ix
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        'regex' => qr/^ ident                  $/ix,
                                                                                                                                                        'handler' => '_where_op_IDENT'
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        'handler' => '_where_op_VALUE',
                                                                                                                                                        'regex' => qr/^ value                  $/ix
                                                                                                                                                      }
                                                                                                                                                    ],
                                                                                                                                     'limit_dialect' => 'LimitXY',
                                                                                                                                     'special_ops' => [
                                                                                                                                                        {
                                                                                                                                                          'handler' => '_where_field_BETWEEN',
                                                                                                                                                          'regex' => qr/^ (?: not \s )? between $/ix
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          'regex' => qr/^ (?: not \s )? in      $/ix,
                                                                                                                                                          'handler' => '_where_field_IN'
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          'regex' => qr/^ ident                 $/ix,
                                                                                                                                                          'handler' => '_where_op_IDENT'
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          'regex' => qr/^ value                 $/ix,
                                                                                                                                                          'handler' => '_where_op_VALUE'
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          'regex' => qr/^ is (?: \s+ not )?     $/ix,
                                                                                                                                                          'handler' => '_where_field_IS'
                                                                                                                                                        }
                                                                                                                                                      ],
                                                                                                                                     'sqltrue' => '1=1',
                                                                                                                                     'cmp' => '='
                                                                                                                                   }, 'DBIx::Class::SQLMaker::MySQL' ),
                                                                                                            '_dbic_connect_attributes' => {
                                                                                                                                            'RaiseError' => 1,
                                                                                                                                            'ShowErrorStatement' => 1,
                                                                                                                                            'AutoCommit' => 1,
                                                                                                                                            'PrintError' => 0
                                                                                                                                          },
                                                                                                            '_conn_pid' => 9462,
                                                                                                            '_in_do_block' => 0,
                                                                                                            '_dbi_connect_info' => [
                                                                                                                                     'dbi:mysql:database=hilt_test',
                                                                                                                                     'root',
                                                                                                                                     'MySQL@',
                                                                                                                                     $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'}{'schema'}{'storage'}{'_dbic_connect_attributes'}
                                                                                                                                   ],
                                                                                                            '_dbh' => bless( {}, 'DBI::db' )
                                                                                                          }, 'DBIx::Class::Storage::DBI::mysql' ),
                                                                                      'class_mappings' => {
                                                                                                            'HiltTest::Schema::Result::User' => 'User'
                                                                                                          }
                                                                                    }, 'HiltTest::Schema' ),
                                                                 '_columns_info_loaded' => 0
                                                               }, 'DBIx::Class::ResultSource::Table' ),
                                             'me' => 'users',
                                             '-alias' => 'me'
                                           }
                                         ],
                               'alias' => 'me',
                               'result_source' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'},
                               'as' => [
                                         'user_id',
                                         'mail',
                                         'first_name',
                                         'last_name',
                                         'address',
                                         'date_create',
                                         'date_update'
                                       ],
                               'select' => [
                                             'me.user_id',
                                             'me.mail',
                                             'me.first_name',
                                             'me.last_name',
                                             'me.address',
                                             'me.date_create',
                                             'me.date_update'
                                           ],
                               '_simple_passthrough_construction' => 1,
                               '_last_sqlmaker_alias_map' => undef,
                               'limit' => 20,
                               'bind' => []
                             },
                 'cursor' => bless( {
                                      'storage' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'}{'schema'}{'storage'},
                                      'attrs' => $VAR1->{'_attrs'},
                                      'args' => [
                                                  $VAR1->{'_attrs'}{'from'},
                                                  $VAR1->{'_attrs'}{'select'},
                                                  undef,
                                                  $VAR1->{'_attrs'}
                                                ],
                                      'sth' => undef
                                    }, 'DBIx::Class::Storage::DBI::Cursor' ),
                 'cond' => undef,
                 'pager' => undef,
                 'result_source' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'},
                 'attrs' => {
                              'bind' => $VAR1->{'_attrs'}{'bind'},
                              'limit' => 20,
                              'rows' => 10,
                              'page' => 1,
                              'alias' => 'me'
                            },
                 '_result_class' => 'HiltTest::Schema::Result::User',
                 '_result_inflator' => {
                                         'is_hri' => 0,
                                         'cref' => sub { "DUMMY" },
                                         'is_core_row' => 1
                                       }
               }, 'DBIx::Class::ResultSet' );

[Sat Nov 12 22:26:33 2016] [debug] Dump data = $VAR1 = bless( {
                 '_column_data' => {
                                     'address' => 'test address',
                                     'date_create' => '2016-11-02 19:44:07',
                                     'first_name' => 'Test first name',
                                     'user_id' => '2',
                                     'mail' => 'test_test@test.com',
                                     'date_update' => '2016-11-02 19:44:07',
                                     'last_name' => 'Test last name'
                                   },
                 '_in_storage' => 1,
                 '_result_source' => bless( {
                                              '_primaries' => [
                                                                'user_id'
                                                              ],
                                              'name' => 'users',
                                              '_relationships' => {},
                                              '_columns' => {
                                                              'date_create' => {
                                                                                 '_inflate_info' => {
                                                                                                      'deflate' => sub { "DUMMY" },
                                                                                                      'inflate' => sub { "DUMMY" }
                                                                                                    },
                                                                                 'datetime_undef_if_invalid' => 1,
                                                                                 'default_value' => 'CURRENT_TIMESTAMP',
                                                                                 'is_nullable' => 0,
                                                                                 'data_type' => 'datetime',
                                                                                 '_ic_dt_method' => 'datetime'
                                                                               },
                                                              'address' => {
                                                                             'default_value' => '',
                                                                             'data_type' => 'varchar',
                                                                             'is_nullable' => 0,
                                                                             'size' => 500
                                                                           },
                                                              'date_update' => {
                                                                                 '_inflate_info' => {
                                                                                                      'inflate' => sub { "DUMMY" },
                                                                                                      'deflate' => sub { "DUMMY" }
                                                                                                    },
                                                                                 'default_value' => 'CURRENT_TIMESTAMP',
                                                                                 'datetime_undef_if_invalid' => 1,
                                                                                 'is_nullable' => 0,
                                                                                 'data_type' => 'datetime',
                                                                                 '_ic_dt_method' => 'datetime'
                                                                               },
                                                              'last_name' => {
                                                                               'size' => 255,
                                                                               'is_nullable' => 0,
                                                                               'data_type' => 'varchar',
                                                                               'default_value' => ''
                                                                             },
                                                              'first_name' => {
                                                                                'default_value' => '',
                                                                                'data_type' => 'varchar',
                                                                                'is_nullable' => 0,
                                                                                'size' => 255
                                                                              },
                                                              'user_id' => {
                                                                             'extra' => {
                                                                                          'unsigned' => 1
                                                                                        },
                                                                             'data_type' => 'integer',
                                                                             'is_nullable' => 0,
                                                                             'is_auto_increment' => 1
                                                                           },
                                                              'mail' => {
                                                                          'data_type' => 'varchar',
                                                                          'is_nullable' => 0,
                                                                          'size' => 255
                                                                        }
                                                            },
                                              'source_name' => 'User',
                                              '_unique_constraints' => {
                                                                         'mail_UNIQUE' => [
                                                                                            'mail'
                                                                                          ],
                                                                         'primary' => $VAR1->{'_result_source'}{'_primaries'}
                                                                       },
                                              'result_class' => 'HiltTest::Schema::Result::User',
                                              '_ordered_columns' => [
                                                                      'user_id',
                                                                      'mail',
                                                                      'first_name',
                                                                      'last_name',
                                                                      'address',
                                                                      'date_create',
                                                                      'date_update'
                                                                    ],
                                              'resultset_class' => 'DBIx::Class::ResultSet',
                                              'resultset_attributes' => {},
                                              'schema' => bless( {
                                                                   'source_registrations' => {
                                                                                               'User' => $VAR1->{'_result_source'}
                                                                                             },
                                                                   'storage' => bless( {
                                                                                         '_driver_determined' => 1,
                                                                                         '_sql_maker_opts' => {},
                                                                                         '_connect_info' => [
                                                                                                              'dbi:mysql:database=hilt_test',
                                                                                                              'root',
                                                                                                              'MySQL@'
                                                                                                            ],
                                                                                         'savepoints' => [],
                                                                                         '_dbh_details' => {
                                                                                                             'info' => {
                                                                                                                         'normalized_dbms_version' => '5.007016',
                                                                                                                         'dbms_version' => '5.7.16-0ubuntu0.16.04.1'
                                                                                                                       },
                                                                                                             '_datatype_map_cache' => {
                                                                                                                                        'integer' => undef
                                                                                                                                      }
                                                                                                           },
                                                                                         'schema' => $VAR1->{'_result_source'}{'schema'},
                                                                                         '_dbh_autocommit' => 1,
                                                                                         'transaction_depth' => 0,
                                                                                         '_sql_maker' => bless( {
                                                                                                                  'sqlfalse' => '0=1',
                                                                                                                  'injection_guard' => qr/
    \;
      |
    ^ \s* go \s
  /mix,
                                                                                                                  'bindtype' => 'columns',
                                                                                                                  'equality_op' => qr/^( \= | \= )$/ix,
                                                                                                                  'like_op' => qr/^ (is\s+)? r?like $/ix,
                                                                                                                  'array_datatypes' => 1,
                                                                                                                  'inequality_op' => qr/^( != | <> )$/ix,
                                                                                                                  'not_like_op' => qr/^ (is\s+)? not \s+ r?like $/ix,
                                                                                                                  'name_sep' => '.',
                                                                                                                  'logic' => 'OR',
                                                                                                                  'unary_ops' => [
                                                                                                                                   {
                                                                                                                                     'handler' => '_where_op_ANDOR',
                                                                                                                                     'regex' => qr/^ and  (?: [_\s]? \d+ )? $/ix
                                                                                                                                   },
                                                                                                                                   {
                                                                                                                                     'handler' => '_where_op_ANDOR',
                                                                                                                                     'regex' => qr/^ or   (?: [_\s]? \d+ )? $/ix
                                                                                                                                   },
                                                                                                                                   {
                                                                                                                                     'handler' => '_where_op_NEST',
                                                                                                                                     'regex' => qr/^ nest (?: [_\s]? \d+ )? $/ix
                                                                                                                                   },
                                                                                                                                   {
                                                                                                                                     'handler' => '_where_op_BOOL',
                                                                                                                                     'regex' => qr/^ (?: not \s )? bool     $/ix
                                                                                                                                   },
                                                                                                                                   {
                                                                                                                                     'regex' => qr/^ ident                  $/ix,
                                                                                                                                     'handler' => '_where_op_IDENT'
                                                                                                                                   },
                                                                                                                                   {
                                                                                                                                     'handler' => '_where_op_VALUE',
                                                                                                                                     'regex' => qr/^ value                  $/ix
                                                                                                                                   }
                                                                                                                                 ],
                                                                                                                  'limit_dialect' => 'LimitXY',
                                                                                                                  'special_ops' => [
                                                                                                                                     {
                                                                                                                                       'handler' => '_where_field_BETWEEN',
                                                                                                                                       'regex' => qr/^ (?: not \s )? between $/ix
                                                                                                                                     },
                                                                                                                                     {
                                                                                                                                       'regex' => qr/^ (?: not \s )? in      $/ix,
                                                                                                                                       'handler' => '_where_field_IN'
                                                                                                                                     },
                                                                                                                                     {
                                                                                                                                       'regex' => qr/^ ident                 $/ix,
                                                                                                                                       'handler' => '_where_op_IDENT'
                                                                                                                                     },
                                                                                                                                     {
                                                                                                                                       'regex' => qr/^ value                 $/ix,
                                                                                                                                       'handler' => '_where_op_VALUE'
                                                                                                                                     },
                                                                                                                                     {
                                                                                                                                       'regex' => qr/^ is (?: \s+ not )?     $/ix,
                                                                                                                                       'handler' => '_where_field_IS'
                                                                                                                                     }
                                                                                                                                   ],
                                                                                                                  'sqltrue' => '1=1',
                                                                                                                  'cmp' => '='
                                                                                                                }, 'DBIx::Class::SQLMaker::MySQL' ),
                                                                                         '_dbic_connect_attributes' => {
                                                                                                                         'RaiseError' => 1,
                                                                                                                         'ShowErrorStatement' => 1,
                                                                                                                         'AutoCommit' => 1,
                                                                                                                         'PrintError' => 0
                                                                                                                       },
                                                                                         '_conn_pid' => 9462,
                                                                                         '_in_do_block' => 0,
                                                                                         '_dbi_connect_info' => [
                                                                                                                  'dbi:mysql:database=hilt_test',
                                                                                                                  'root',
                                                                                                                  'MySQL@',
                                                                                                                  $VAR1->{'_result_source'}{'schema'}{'storage'}{'_dbic_connect_attributes'}
                                                                                                                ],
                                                                                         '_dbh' => bless( {}, 'DBI::db' )
                                                                                       }, 'DBIx::Class::Storage::DBI::mysql' ),
                                                                   'class_mappings' => {
                                                                                         'HiltTest::Schema::Result::User' => 'User'
                                                                                       }
                                                                 }, 'HiltTest::Schema' ),
                                              '_columns_info_loaded' => 0
                                            }, 'DBIx::Class::ResultSource::Table' )
               }, 'HiltTest::Schema::Result::User' );

[Sat Nov 12 22:26:33 2016] [debug] Dump req_info = $VAR1 = {
          'page' => 1,
          'limit' => 20
        };

[Sat Nov 12 22:26:33 2016] [debug] 200 OK (0.047502s, 21.052/s)
[Sat Nov 12 22:45:05 2016] [debug] GET "/users/list"
[Sat Nov 12 22:45:05 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 22:45:05 2016] [debug] Dump rs = $VAR1 = bless( {
                 '_stashed_results' => undef,
                 'attrs' => {
                              'alias' => 'me',
                              'limit' => 20,
                              'rows' => 10,
                              'bind' => [],
                              'page' => 1
                            },
                 '_attrs' => {
                               'from' => [
                                           {
                                             'me' => 'users',
                                             '-alias' => 'me',
                                             '-rsrc' => bless( {
                                                                 'schema' => bless( {
                                                                                      'class_mappings' => {
                                                                                                            'HiltTest::Schema::Result::User' => 'User'
                                                                                                          },
                                                                                      'source_registrations' => {
                                                                                                                  'User' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'}
                                                                                                                },
                                                                                      'storage' => bless( {
                                                                                                            '_dbi_connect_info' => [
                                                                                                                                     'dbi:mysql:database=hilt_test',
                                                                                                                                     'root',
                                                                                                                                     'MySQL@',
                                                                                                                                     {
                                                                                                                                       'PrintError' => 0,
                                                                                                                                       'ShowErrorStatement' => 1,
                                                                                                                                       'AutoCommit' => 1,
                                                                                                                                       'RaiseError' => 1
                                                                                                                                     }
                                                                                                                                   ],
                                                                                                            'schema' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'}{'schema'},
                                                                                                            '_dbic_connect_attributes' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'}{'schema'}{'storage'}{'_dbi_connect_info'}[3],
                                                                                                            '_sql_maker_opts' => {},
                                                                                                            '_dbh' => bless( {}, 'DBI::db' ),
                                                                                                            'savepoints' => [],
                                                                                                            '_conn_pid' => 9796,
                                                                                                            '_dbh_details' => {
                                                                                                                                'info' => {
                                                                                                                                            'dbms_version' => '5.7.16-0ubuntu0.16.04.1',
                                                                                                                                            'normalized_dbms_version' => '5.007016'
                                                                                                                                          },
                                                                                                                                '_datatype_map_cache' => {
                                                                                                                                                           'integer' => undef
                                                                                                                                                         }
                                                                                                                              },
                                                                                                            '_driver_determined' => 1,
                                                                                                            '_connect_info' => [
                                                                                                                                 'dbi:mysql:database=hilt_test',
                                                                                                                                 'root',
                                                                                                                                 'MySQL@'
                                                                                                                               ],
                                                                                                            '_sql_maker' => bless( {
                                                                                                                                     'special_ops' => [
                                                                                                                                                        {
                                                                                                                                                          'regex' => qr/^ (?: not \s )? between $/ix,
                                                                                                                                                          'handler' => '_where_field_BETWEEN'
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          'regex' => qr/^ (?: not \s )? in      $/ix,
                                                                                                                                                          'handler' => '_where_field_IN'
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          'handler' => '_where_op_IDENT',
                                                                                                                                                          'regex' => qr/^ ident                 $/ix
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          'regex' => qr/^ value                 $/ix,
                                                                                                                                                          'handler' => '_where_op_VALUE'
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                          'handler' => '_where_field_IS',
                                                                                                                                                          'regex' => qr/^ is (?: \s+ not )?     $/ix
                                                                                                                                                        }
                                                                                                                                                      ],
                                                                                                                                     'equality_op' => qr/^( \= | \= )$/ix,
                                                                                                                                     'logic' => 'OR',
                                                                                                                                     'bindtype' => 'columns',
                                                                                                                                     'limit_dialect' => 'LimitXY',
                                                                                                                                     'cmp' => '=',
                                                                                                                                     'like_op' => qr/^ (is\s+)? r?like $/ix,
                                                                                                                                     'inequality_op' => qr/^( != | <> )$/ix,
                                                                                                                                     'unary_ops' => [
                                                                                                                                                      {
                                                                                                                                                        'handler' => '_where_op_ANDOR',
                                                                                                                                                        'regex' => qr/^ and  (?: [_\s]? \d+ )? $/ix
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        'handler' => '_where_op_ANDOR',
                                                                                                                                                        'regex' => qr/^ or   (?: [_\s]? \d+ )? $/ix
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        'regex' => qr/^ nest (?: [_\s]? \d+ )? $/ix,
                                                                                                                                                        'handler' => '_where_op_NEST'
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        'regex' => qr/^ (?: not \s )? bool     $/ix,
                                                                                                                                                        'handler' => '_where_op_BOOL'
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        'regex' => qr/^ ident                  $/ix,
                                                                                                                                                        'handler' => '_where_op_IDENT'
                                                                                                                                                      },
                                                                                                                                                      {
                                                                                                                                                        'handler' => '_where_op_VALUE',
                                                                                                                                                        'regex' => qr/^ value                  $/ix
                                                                                                                                                      }
                                                                                                                                                    ],
                                                                                                                                     'injection_guard' => qr/
    \;
      |
    ^ \s* go \s
  /mix,
                                                                                                                                     'array_datatypes' => 1,
                                                                                                                                     'name_sep' => '.',
                                                                                                                                     'not_like_op' => qr/^ (is\s+)? not \s+ r?like $/ix,
                                                                                                                                     'sqlfalse' => '0=1',
                                                                                                                                     'sqltrue' => '1=1'
                                                                                                                                   }, 'DBIx::Class::SQLMaker::MySQL' ),
                                                                                                            '_dbh_autocommit' => 1,
                                                                                                            'transaction_depth' => 0,
                                                                                                            '_in_do_block' => 0
                                                                                                          }, 'DBIx::Class::Storage::DBI::mysql' )
                                                                                    }, 'HiltTest::Schema' ),
                                                                 'resultset_attributes' => {},
                                                                 'result_class' => 'HiltTest::Schema::Result::User',
                                                                 '_ordered_columns' => [
                                                                                         'user_id',
                                                                                         'mail',
                                                                                         'first_name',
                                                                                         'last_name',
                                                                                         'address',
                                                                                         'date_create',
                                                                                         'date_update'
                                                                                       ],
                                                                 'resultset_class' => 'DBIx::Class::ResultSet',
                                                                 'source_name' => 'User',
                                                                 '_columns_info_loaded' => 0,
                                                                 'name' => 'users',
                                                                 '_unique_constraints' => {
                                                                                            'primary' => [
                                                                                                           'user_id'
                                                                                                         ],
                                                                                            'mail_UNIQUE' => [
                                                                                                               'mail'
                                                                                                             ]
                                                                                          },
                                                                 '_relationships' => {},
                                                                 '_columns' => {
                                                                                 'mail' => {
                                                                                             'size' => 255,
                                                                                             'is_nullable' => 0,
                                                                                             'data_type' => 'varchar'
                                                                                           },
                                                                                 'address' => {
                                                                                                'size' => 500,
                                                                                                'is_nullable' => 0,
                                                                                                'data_type' => 'varchar',
                                                                                                'default_value' => ''
                                                                                              },
                                                                                 'user_id' => {
                                                                                                'is_auto_increment' => 1,
                                                                                                'data_type' => 'integer',
                                                                                                'is_nullable' => 0,
                                                                                                'extra' => {
                                                                                                             'unsigned' => 1
                                                                                                           }
                                                                                              },
                                                                                 'date_update' => {
                                                                                                    '_inflate_info' => {
                                                                                                                         'inflate' => sub { "DUMMY" },
                                                                                                                         'deflate' => sub { "DUMMY" }
                                                                                                                       },
                                                                                                    'data_type' => 'datetime',
                                                                                                    '_ic_dt_method' => 'datetime',
                                                                                                    'default_value' => 'CURRENT_TIMESTAMP',
                                                                                                    'is_nullable' => 0,
                                                                                                    'datetime_undef_if_invalid' => 1
                                                                                                  },
                                                                                 'first_name' => {
                                                                                                   'is_nullable' => 0,
                                                                                                   'default_value' => '',
                                                                                                   'data_type' => 'varchar',
                                                                                                   'size' => 255
                                                                                                 },
                                                                                 'last_name' => {
                                                                                                  'data_type' => 'varchar',
                                                                                                  'default_value' => '',
                                                                                                  'is_nullable' => 0,
                                                                                                  'size' => 255
                                                                                                },
                                                                                 'date_create' => {
                                                                                                    '_inflate_info' => {
                                                                                                                         'deflate' => sub { "DUMMY" },
                                                                                                                         'inflate' => sub { "DUMMY" }
                                                                                                                       },
                                                                                                    'data_type' => 'datetime',
                                                                                                    'default_value' => 'CURRENT_TIMESTAMP',
                                                                                                    '_ic_dt_method' => 'datetime',
                                                                                                    'datetime_undef_if_invalid' => 1,
                                                                                                    'is_nullable' => 0
                                                                                                  }
                                                                               },
                                                                 '_primaries' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'}{'_unique_constraints'}{'primary'}
                                                               }, 'DBIx::Class::ResultSource::Table' )
                                           }
                                         ],
                               '_simple_passthrough_construction' => 1,
                               'offset' => 0,
                               'result_source' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'},
                               'rows' => 10,
                               'limit' => 20,
                               '_last_sqlmaker_alias_map' => undef,
                               'bind' => $VAR1->{'attrs'}{'bind'},
                               'as' => [
                                         'user_id',
                                         'mail',
                                         'first_name',
                                         'last_name',
                                         'address',
                                         'date_create',
                                         'date_update'
                                       ],
                               'alias' => 'me',
                               'select' => [
                                             'me.user_id',
                                             'me.mail',
                                             'me.first_name',
                                             'me.last_name',
                                             'me.address',
                                             'me.date_create',
                                             'me.date_update'
                                           ]
                             },
                 '_result_inflator' => {
                                         'cref' => sub { "DUMMY" },
                                         'is_core_row' => 0,
                                         'is_hri' => 1
                                       },
                 'cursor' => bless( {
                                      'args' => [
                                                  $VAR1->{'_attrs'}{'from'},
                                                  $VAR1->{'_attrs'}{'select'},
                                                  undef,
                                                  $VAR1->{'_attrs'}
                                                ],
                                      'storage' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'}{'schema'}{'storage'},
                                      'attrs' => $VAR1->{'_attrs'},
                                      '_pos' => 1,
                                      '_done' => 1,
                                      'sth' => bless( {}, 'DBI::st' ),
                                      '_results' => [
                                                      '2',
                                                      'test_test@test.com',
                                                      'Test first name',
                                                      'Test last name',
                                                      'test address',
                                                      '2016-11-02 19:44:07',
                                                      '2016-11-02 19:44:07'
                                                    ],
                                      '_pid' => 9796
                                    }, 'DBIx::Class::Storage::DBI::Cursor' ),
                 '_result_class' => 'DBIx::Class::ResultClass::HashRefInflator',
                 'cond' => undef,
                 'result_source' => $VAR1->{'_attrs'}{'from'}[0]{'-rsrc'},
                 'pager' => undef
               }, 'DBIx::Class::ResultSet' );

[Sat Nov 12 22:45:05 2016] [debug] Dump data = $VAR1 = '{"data":[{"last_name":"Test last name","first_name":"Test first name","date_create":"2016-11-02 19:44:07","address":"test address","user_id":"2","date_update":"2016-11-02 19:44:07","mail":"test_test@test.com"}]}';

[Sat Nov 12 22:45:05 2016] [debug] Dump req_info = $VAR1 = {
          'limit' => 20,
          'page' => 1
        };

[Sat Nov 12 22:45:05 2016] [debug] 200 OK (0.044333s, 22.557/s)
[Sat Nov 12 23:19:44 2016] [debug] GET "/users/list"
[Sat Nov 12 23:19:44 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 23:19:44 2016] [debug] caught error: Not a HASH reference at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 35.

[Sat Nov 12 23:19:44 2016] [debug] 422 Unprocessable Entity (0.045244s, 22.102/s)
[Sat Nov 12 23:19:57 2016] [debug] GET "/users/list"
[Sat Nov 12 23:19:57 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 23:19:57 2016] [debug] caught error: Not a HASH reference at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 35.

[Sat Nov 12 23:19:57 2016] [debug] 422 Unprocessable Entity (0.047667s, 20.979/s)
[Sat Nov 12 23:20:12 2016] [debug] GET "/users/list"
[Sat Nov 12 23:20:12 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 23:20:12 2016] [debug] caught error: Not a HASH reference at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 35.

[Sat Nov 12 23:20:12 2016] [debug] 422 Unprocessable Entity (0.044086s, 22.683/s)
[Sat Nov 12 23:23:07 2016] [debug] GET "/users/list"
[Sat Nov 12 23:23:07 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 23:23:07 2016] [debug] 200 OK (0.051177s, 19.540/s)
[Sat Nov 12 23:28:25 2016] [debug] GET "/users/list"
[Sat Nov 12 23:28:25 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 23:28:26 2016] [debug] 200 OK (0.04396s, 22.748/s)
[Sat Nov 12 23:29:33 2016] [debug] GET "/users/list"
[Sat Nov 12 23:29:33 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Sat Nov 12 23:29:33 2016] [debug] Dump data = $VAR1 = '[{"first_name":"Test first name","date_update":"2016-11-02 19:44:07","user_id":"2","address":"test address","mail":"test_test@test.com","last_name":"Test last name","date_create":"2016-11-02 19:44:07"}]';

[Sat Nov 12 23:29:33 2016] [debug] Dump req_info = $VAR1 = {
          'limit' => 20,
          'page' => 1
        };

[Sat Nov 12 23:29:33 2016] [debug] 200 OK (0.044536s, 22.454/s)
[Mon Nov 14 05:56:21 2016] [debug] GET "/users/list"
[Mon Nov 14 05:56:21 2016] [debug] Routing to controller "HiltTest::Controller::Example" and action "list_users"
[Mon Nov 14 05:56:21 2016] [debug] caught error: encountered object 'HiltTest::Schema::Result::User=HASH(0x4913e50)', but neither allow_blessed, convert_blessed nor allow_tags settings are enabled (or TO_JSON/FREEZE method missing) at /home/vagrig/hilt/hilt_test/script/../lib/HiltTest/Controller/Example.pm line 39.

[Mon Nov 14 05:56:21 2016] [debug] 422 Unprocessable Entity (0.062281s, 16.056/s)
